- name: SecondMenu
  getTemplate: |-
    module.exports = React.createClass({
      render: function() {
        return (
          <div>
            {this.props.customData}
          </div>
        )
      }
    });
  getData: |
    return elem.textContent;
  doAction: ''
- name: Tab
  getTemplate: "import {\n  Tabs\n} from 'ysp-custom-components';\nimport {\n  Component\n} from 'react';\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: this.props.customData.key\n    }\n  }\n  componentDidMount() {\n    var outer = this.refs.outerWrapper.ownerDocument.querySelector('.view-wrapper')\n\n    setTimeout(function() {\n      outer.scrollTop = 0\n    }, 500)\n  }\n  tabsClick(e) {\n    var handler = this.props.customHandler;\n    var e = e.target;\n    if (this.state.show != e.dataset.id) {\n      this.setState({\n        show: parseInt(e.dataset.id)\n      })\n      if (handler) {\n        handler({\n          data: [e.className, e.dataset.id],\n          eventType: 'click'\n        })\n        if (e.dataset.id == 1) {\n          handler({\n            eventType: 'section-trigger',\n            data: 'control151_WNqb4b'\n          });\n        }\n      }\n    }\n  }\n  render() {\n    var data = this.props.customData || [];\n    if (data) {\n      return (\n        <div ref=\"outerWrapper\">\n      \t\t<Tabs\tPassedCustomData={data}\ttabsClick={this.tabsClick.bind(this)}\tstateShow={this.state.show}\t/>\n      \t</div>\n      )\n    } else {\n      return (<div style={{display:'none'}}></div>)\n    }\n  }\n}"
  getData: |
    if (!elem) {
      return [];
    }
    if (elem) {
      var data = {
        tabs: [],
        tabsNum: [],
        key: {}
      };

      var _tabs = elem.querySelectorAll('.mini-tabs-scrollCt .mini-tabs-header span');

      [].map.call(_tabs, function (item, i) {
        var key = item.parentElement.classList.contains('mini-tab-active');
        var num = item.parentElement.getAttribute("index");

        if (item.innerHTML != '流程监控') {
          if (key == true) {
            data.tabs.push(item.innerHTML);
            data.tabsNum.push(num);
            data.key = i;
          } else {
            data.tabs.push(item.innerHTML);
            data.tabsNum.push(num);
          }
        }
      });
      return data;
    }
  doAction: |
    if (data.eventType == 'click') {
      var d = data.dataCustom;

      if (d[0] == 'ysp-tabs') {
        var _tab = elem.querySelectorAll('.mini-tabs-scrollCt .mini-tabs-header span');

        _tab[d[1]].click();
      }

      ysp.appMain.showLoading();
    }
