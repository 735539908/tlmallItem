(function (win, ysp) {

  var utils = ysp.utils;
  ysp.customTemplateHelper = {};
  utils.extend(ysp.customTemplateHelper, {
    CommonHeader: function () {
<<<<<<< HEAD
      var selfTemplate = "import {Component} from 'react';\n/*\n---------------------------\n\u5982\u4F55\u5F15\u7528\uFF1Aimport {CommonHeader} from 'ysp-custom-components';\n---------------------------\n*/\nexport default class extends Component{\n  componentDidMount(){\n  \tif(this.refs.fixed.parentElement.getAttribute('data-componentsid')){\n       \tthis.refs.fixed.parentElement.style.height = '43px'\n       }else{\n        this.refs.fixed.parentElement.style.marginTop = '43px'\n     }\n  }\n   render = () => {\n       return (\n          <div className=\"ysp-header-wrapper ysp-header-position-fixed\" ref='fixed'>\n           <span onClick={this.props.back}>\n             {this.props.backIsShow &&\n                <span>\n                  <span className=\"ysp-header-back-icon\"></span>\n                </span>\n             }\n             {this.props.backIsShow &&\n                <span className='back'></span>\n             }\n           </span>\n           \n           <span onClick={this.props.hander}>{this.props.data && this.props.data.centerText ? this.props.data.centerText:\"\"}</span>\n           <span onClick={this.props.filter}>\n             {this.props.filterIsShow&&\n                <span>\n                  <span className=\"ysp-header-edit-icon\"></span>\n                </span>\n             }\n             {this.props.filterIsShow&&\n             \t\t<span>\n             \t\t\t{this.props.filterIsShow && this.props.data && this.props.data.rightText ? this.props.data.rightText:\"\"}\n             \t\t</span>\n             }\n           </span>\n           <span onClick={this.props.edit}>\n             {this.props.editIsShow&&\n                <span>\n                  <span className=\"ysp-header-edit-icon\"></span>\n                </span>\n             }\n             {this.props.editIsShow&&\n             \t\t<span className=\"ysp-header-edit\">\n             \t\t\t{this.props.editIsShow && this.props.data && this.props.data.rightText ? this.props.data.rightText:\"\"}\n             \t\t</span>\n             }\n           </span>\n          </div>\n       );\n   }\n}";
      return "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/*\n---------------------------\n\u5982\u4F55\u5F15\u7528\uFF1Aimport {CommonHeader} from 'ysp-custom-components';\n---------------------------\n*/\nvar _class = function (_Component) {\n  _inherits(_class, _Component);\n\n  function _class() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, _class);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = _class.__proto__ || Object.getPrototypeOf(_class)).call.apply(_ref, [this].concat(args))), _this), _this.render = function () {\n      return React.createElement(\n        'div',\n        { className: 'ysp-header-wrapper ysp-header-position-fixed', ref: 'fixed' },\n        React.createElement(\n          'span',\n          { onClick: _this.props.back },\n          _this.props.backIsShow && React.createElement(\n            'span',\n            null,\n            React.createElement('span', { className: 'ysp-header-back-icon' })\n          ),\n          _this.props.backIsShow && React.createElement('span', { className: 'back' })\n        ),\n        React.createElement(\n          'span',\n          { onClick: _this.props.hander },\n          _this.props.data && _this.props.data.centerText ? _this.props.data.centerText : \"\"\n        ),\n        React.createElement(\n          'span',\n          { onClick: _this.props.filter },\n          _this.props.filterIsShow && React.createElement(\n            'span',\n            null,\n            React.createElement('span', { className: 'ysp-header-edit-icon' })\n          ),\n          _this.props.filterIsShow && React.createElement(\n            'span',\n            null,\n            _this.props.filterIsShow && _this.props.data && _this.props.data.rightText ? _this.props.data.rightText : \"\"\n          )\n        ),\n        React.createElement(\n          'span',\n          { onClick: _this.props.edit },\n          _this.props.editIsShow && React.createElement(\n            'span',\n            null,\n            React.createElement('span', { className: 'ysp-header-edit-icon' })\n          ),\n          _this.props.editIsShow && React.createElement(\n            'span',\n            { className: 'ysp-header-edit' },\n            _this.props.editIsShow && _this.props.data && _this.props.data.rightText ? _this.props.data.rightText : \"\"\n          )\n        )\n      );\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(_class, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.refs.fixed.parentElement.getAttribute('data-componentsid')) {\n        this.refs.fixed.parentElement.style.height = '43px';\n      } else {\n        this.refs.fixed.parentElement.style.marginTop = '43px';\n      }\n    }\n  }]);\n\n  return _class;\n}(_react.Component);\n\nexports.default = _class;";
=======
      var selfTemplate = "import {Component} from 'react';\n/*\n---------------------------\n\u5982\u4F55\u5F15\u7528\uFF1Aimport {CommonHeader} from 'ysp-custom-components';\n---------------------------\n*/\nexport default class extends component{\n  componentDidMount(){\n  \tif(this.refs.fixed.parentElement.getAttribute('data-componentsid')){\n       \tthis.refs.fixed.parentElement.style.height = '43px'\n       }else{\n        this.refs.fixed.parentElement.style.marginTop = '43px'\n     }\n  }\n   render = () => {\n       return (\n          <div className=\"ysp-header-wrapper ysp-header-position-fixed\" ref='fixed'>\n           <span onClick={this.props.back}>\n             {this.props.backIsShow &&\n                <span>\n                  <span className=\"ysp-header-back-icon\"></span>\n                </span>\n             }\n             {this.props.backIsShow &&\n                <span className='back'>\u8FD4\u56DE</span>\n             }\n           </span>\n           \n           <span onClick={this.props.hander}>{this.props.data && this.props.data.centerText ? this.props.data.centerText:\"\"}</span>\n           <span onClick={this.props.filter}>\n             {this.props.filterIsShow&&\n                <span>\n                  <span className=\"ysp-header-edit-icon\"></span>\n                </span>\n             }\n             {this.props.filterIsShow&&\n             \t\t<span>\n             \t\t\t{this.props.filterIsShow && this.props.data && this.props.data.rightText ? this.props.data.rightText:\"\"}\n             \t\t</span>\n             }\n           </span>\n           <span onClick={this.props.edit}>\n             {this.props.editIsShow&&\n                <span>\n                  <span className=\"ysp-header-edit-icon\"></span>\n                </span>\n             }\n             {this.props.editIsShow&&\n             \t\t<span className=\"ysp-header-edit\">\n             \t\t\t{this.props.editIsShow && this.props.data && this.props.data.rightText ? this.props.data.rightText:\"\"}\n             \t\t</span>\n             }\n           </span>\n          </div>\n       );\n   }\n}";
      return "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/*\n---------------------------\n\u5982\u4F55\u5F15\u7528\uFF1Aimport {CommonHeader} from 'ysp-custom-components';\n---------------------------\n*/\nvar _class = function (_component) {\n  _inherits(_class, _component);\n\n  function _class() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, _class);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = _class.__proto__ || Object.getPrototypeOf(_class)).call.apply(_ref, [this].concat(args))), _this), _this.render = function () {\n      return React.createElement(\n        'div',\n        { className: 'ysp-header-wrapper ysp-header-position-fixed', ref: 'fixed' },\n        React.createElement(\n          'span',\n          { onClick: _this.props.back },\n          _this.props.backIsShow && React.createElement(\n            'span',\n            null,\n            React.createElement('span', { className: 'ysp-header-back-icon' })\n          ),\n          _this.props.backIsShow && React.createElement(\n            'span',\n            { className: 'back' },\n            '\\u8FD4\\u56DE'\n          )\n        ),\n        React.createElement(\n          'span',\n          { onClick: _this.props.hander },\n          _this.props.data && _this.props.data.centerText ? _this.props.data.centerText : \"\"\n        ),\n        React.createElement(\n          'span',\n          { onClick: _this.props.filter },\n          _this.props.filterIsShow && React.createElement(\n            'span',\n            null,\n            React.createElement('span', { className: 'ysp-header-edit-icon' })\n          ),\n          _this.props.filterIsShow && React.createElement(\n            'span',\n            null,\n            _this.props.filterIsShow && _this.props.data && _this.props.data.rightText ? _this.props.data.rightText : \"\"\n          )\n        ),\n        React.createElement(\n          'span',\n          { onClick: _this.props.edit },\n          _this.props.editIsShow && React.createElement(\n            'span',\n            null,\n            React.createElement('span', { className: 'ysp-header-edit-icon' })\n          ),\n          _this.props.editIsShow && React.createElement(\n            'span',\n            { className: 'ysp-header-edit' },\n            _this.props.editIsShow && _this.props.data && _this.props.data.rightText ? _this.props.data.rightText : \"\"\n          )\n        )\n      );\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(_class, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.refs.fixed.parentElement.getAttribute('data-componentsid')) {\n        this.refs.fixed.parentElement.style.height = '43px';\n      } else {\n        this.refs.fixed.parentElement.style.marginTop = '43px';\n      }\n    }\n  }]);\n\n  return _class;\n}(component);\n\nexports.default = _class;";
    },
    MainCard: function () {
      var selfTemplate = "var mainCard=React.createClass({\n  onRadioClick:function(e){\n    var target=e.target;\n  \tvar handler=this.props.customHandler;\n    if(handler){\n    \thandler({\n      \tdata:{\n        \tdataIndex:target.getAttribute(\"data-index\"),\n          dataIndex1:target.getAttribute(\"data-index1\"),\n          dataIndex2:target.getAttribute(\"data-index2\"),\n        },\n        eventType:{\n        \teventDataType: \"click\",\n          eventTarget: \"radio\"\n        }\n      })\n    }\n  },\n  changeDate1:function(data){\n    var myDate=new Date();\n    var handler=this.props.customHandler;\n    if(handler){\n    \thandler({\n      \tdata:{\n          dataValue:myDate.toLocaleDateString().replace(/\\//g,\"-\")+\" 00:00\",\n        \tdataIndex:data.dataIndex,\n          dataIndex1:data.dataIndex1,\n        },\n        eventType:{\n        \teventDataType: \"date\"\n        }\n      })\n    }\n  },\n  changeDate:function(data,time){\n    var handler=this.props.customHandler;\n    if(handler){\n    \thandler({\n      \tdata:{\n          dataValue:time.value,\n        \tdataIndex:data.dataIndex,\n          dataIndex1:data.dataIndex1,\n          dataIndex2:data.dataIndex2\n        },\n        eventType:{\n        \teventDataType: \"date\"\n        }\n      })\n    }\n  },\n  checkInput:function(e){\n    var target=e.target;\n    var handler=this.props.customHandler;\n    var value=target.value;\n    if(isNaN(target.value)){\n      target.value=\"\";\n      if(handler){\n        handler({\n          data:{\n            dataValue:\"\",\n            dataInputText:target.getAttribute(\"data-inputText\"),\n            dataIndex:target.getAttribute(\"data-index\"),\n            dataIndex1:target.getAttribute(\"data-index1\"),\n            dataIndex2:target.getAttribute(\"data-index2\")\n          },\n          eventType:{\n            eventDataType: \"change\",\n            eventTarget: \"input\"\n          }\n        })\n      }\n    }else{\n      if(handler){\n        handler({\n          data:{\n            dataValue:target.value,\n            dataInputText:target.getAttribute(\"data-inputText\"),\n            dataIndex:target.getAttribute(\"data-index\"),\n            dataIndex1:target.getAttribute(\"data-index1\"),\n            dataIndex2:target.getAttribute(\"data-index2\")\n          },\n          eventType:{\n            eventDataType: \"change\",\n            eventTarget: \"input\"\n          }\n        })\n      }\n    }\n  },\n  changeInput:function(e){\n  \tvar target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n    \thandler({\n      \tdata:{\n          dataValue:target.value,\n          dataInputText:target.getAttribute(\"data-inputText\"),\n        \tdataIndex:target.getAttribute(\"data-index\"),\n          dataIndex1:target.getAttribute(\"data-index1\"),\n          dataIndex2:target.getAttribute(\"data-index2\")\n        },\n        eventType:{\n        \teventDataType: \"change\",\n          eventTarget: \"input\"\n        }\n      })\n    }\n  },\n  changeArea:function(e){\n    var target=e.target;\n    var value=$(target).prev().val();\n  \tvar handler=this.props.customHandler;\n    if(handler){\n    \thandler({\n      \tdata:{\n          dataValue:value,\n        \tdataIndex:target.getAttribute(\"data-index\"),\n          dataIndex1:target.getAttribute(\"data-index1\")\n        },\n        eventType:{\n        \teventDataType: \"area\"\n        }\n      })\n    }\n  },\n  changeTextarea:function(e){\n  \tvar target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n    \thandler({\n      \tdata:{\n          dataValue:target.value,\n        \tdataIndex:target.getAttribute(\"data-index\"),\n          dataIndex1:target.getAttribute(\"data-index1\")\n        },\n        eventType:{\n        \teventDataType: \"change\",\n          eventTarget: \"textarea\"\n        }\n      })\n    }\n  },\n  onClickSelect:function(e){\n  \tvar target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n    \thandler({\n      \tdata:{\n          dataValue:target.value,\n        \tdataIndex:target.getAttribute(\"data-index\"),\n          dataIndex1:target.getAttribute(\"data-index1\")\n        },\n        eventType:{\n        \teventDataType: \"click\",\n          eventTarget: \"select\"\n        }\n      })\n    }\n  },\n  changeSelect:function(e){\n  \tvar target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n    \thandler({\n      \tdata:{\n          dataValue:target.value,\n        \tdataIndex:target.getAttribute(\"data-index\"),\n          dataIndex1:target.getAttribute(\"data-index1\")\n        },\n        eventType:{\n        \teventDataType: \"change\",\n          eventTarget: \"select\"\n        }\n      })\n    }\n  },\n  render:function(){\n    var _this=this;\n  \tvar data=this.props.customData;\n  \tvar type=this.props.type;\n    var title=this.props.title===undefined ? \"off\" : this.props.title;\n    function mvc_Int(evt){\n        var code = evt.keyCode;\n        return IsNumericAllow(code);\n    }\n    function IsNumericAllow(code){\n        if ((code>95 && code<106) || (code>32 && code<41) || (code>47 && code<58) || code==8 || code==46 || code==9 || code == 13)\n            return true;\n        else \n            return false;\n    }\n    if(type===\"\u901A\u52E4\u5361\u5BA1\u6279\" || type===\"\u8F66\u8F86\u7533\u8BF7\u5BA1\u6279\" || type===\"\u6570\u636E\u4F20\u8F93\u7533\u8BF7\u5BA1\u6279\" || type===\"\u8BA1\u7B97\u673A\u90AE\u4EF6\u8D26\u53F7\u7533\u8BF7\u5BA1\u6279\" || type===\"\u65B0\u8D27\u7269\u51FA\u5382\u653E\u884C\u5BA1\u6279\" || type===\"\u4EBA\u5458\u589E\u8865\u5BA1\u6279\" || type===\"\u975E\u751F\u4EA7\u6027\u5728\u7EBF\u4F1A\u7B7E\u6D41\u7A0B\" || type===\"\u4F1A\u52A1\u670D\u52A1\u7533\u8BF7\u6D41\u7A0B\u5BA1\u6279\" || type===\"\u5BF9\u516C\u8D39\u7528\u4ED8\u6B3E\u7533\u8BF7\u5BA1\u6279\" || type===\"\u706B\u8F66\u7968\u9884\u8BA2\u7533\u8BF7\u5BA1\u6279\" || type===\"A\u7C7B\u573A\u6240\u4EBA\u5458\u51FA\u5165\u53CA\u62CD\u6444\u7533\u8BF7\" || type===\"\u624B\u673A\u5361\u53CA\u65E0\u7EBF\u7F51\u5361\u7533\u8BF7\" || type===\"\u56FD\u5185\u673A\u7968\u9884\u8BA2\u7533\u8BF7\" || type===\"\u8D2D\u7F6E\u8D44\u4EA7\u5728\u7EBF\u7533\u8BF7\" || type===\"\u4F1A\u6240\u8BA2\u623F\u6D41\u7A0B\" || type===\"\u4F9B\u5E94\u5546\u4FE1\u606F\u7EF4\u62A4\u7533\u8BF7\u6D41\u7A0B\" || type===\"\u7B49\u7EA7\u8C03\u6574\u5BA1\u6279\" || type===\"\u501F\u6B3E\u7533\u8BF7\" || type===\"\u4ED8\u6B3E\u9644\u5C5EOA\u6D41\u7A0B\" || type===\"\u8D44\u4EA7\u62A5\u5E9F/\u6539\u9020\u6D41\u7A0B\" || type===\"\u4F1A\u52A1\u670D\u52A1\u7533\u8BF7\u6D41\u7A0B\u7533\u8BF7\" || type===\"\u901A\u52E4\u5361\u7533\u8BF7\u6D41\u7A0B\u7533\u8BF7\" || type===\"\u706B\u8F66\u7968\u9884\u8BA2\u7533\u8BF7\u7533\u8BF7\" || type===\"\u8F66\u8F86\u7533\u8BF7\u7533\u8BF7\" || type===\"\u56FD\u5185\u673A\u7968\u9884\u8BA2\u7533\u8BF7\u7533\u8BF7\" || type===\"\u65B0\u8D27\u7269\u51FA\u5382\u653E\u884C\u7533\u8BF7\" || type===\"\u8003\u52E4\u5BA1\u6279\u5BA1\u6279\" || type===\"\u4E91\u5E73\u53F0\u6743\u9650\u7533\u8BF7\u5BA1\u6279\" || type ===\"\u5916\u57F9\u7533\u8BF7\" || type===\"\u6295\u8D44\u9879\u76EE\u53D8\u52A8\u7533\u8BF7\" || type===\"\u5185\u90E8\u5546\u57CE\u4F4E\u8017\uFF08\u542B\u4E09\u54C1\uFF09\u7269\u6599\u8BF7\u8D2D\u7533\u8BF7\" || type===\"\u8D44\u4EA7\u9500\u552E\u6D41\u7A0B\u5BA1\u6279\u7533\u8BF7\" ||  type===\"\u63A5\u5F85\u7533\u8BF7\u5BA1\u6279\" || type===\"\u4ED8\u6B3E\u7533\u8BF7\u5BA1\u6279\" || type===\"\u5185\u90E8\u5546\u57CE\u8D44\u4EA7\u8D2D\u7F6E\u7533\u8BF7\" || type===\"\u8D44\u4EA7\u91C7\u8D2D\u4F1A\u7B7E\u6D41\u7A0B\"){\n      var mainStyle={\n        mainCard2:{\n        \tmarginLeft: \"10px\",\n          marginRight: \"10px\",\n          marginBottom: \"10px\",\n          padding: \"20px 0px\",\n          background: \"white\",\n          borderRadius: \"4px\"\n        },\n        mainCard2Title:{\n        \tpaddingLeft: \"10px\",\n          marginBottom: \"10px\",\n          borderLeft: \"solid 4px #ffac20\",\n          color: \"#2d2f34\",\n          fontSize: \"16px\",\n          fontWeight: \"bold\"\n        },\n        color: {\n          color: \"#5f78c7\"\n        },\n        mainCard2Content:{\n          borderRadius: \"4px\",\n        \tpadding: \"10px 15px\",\n          fontSize: \"14px\"\n        },\n        li:{\n          margin: \"5px 0px\",\n          borderRadius: \"4px\",\n          listStyle: \"none\",\n        \tborder: \"4px\",\n          background: \"#f0f3fb\"\n        },\n        list:{\n        \tpadding: \"5px 0px\"\n        },\n        listLeft:{\n          wordBreak: \"break-all\",\n        \tcolor: \"#5f6a7b\",\n          fontWeight: \"bold\"\n        },\n        listRight:{\n          wordBreak: \"break-all\",\n        \tcolor: \"#81889d\"\n        },\n        listTop:{\n        \tcolor: \"#5f6a7b\",\n          fontWeight: \"bold\"\n        },\n        listBottom:{\n        \tcolor: \"#81889d\"\n        },\n        input:{\n          width: \"100%\",\n        \tborder: \"none\",\n          lineHeight: \"32px\",\n          fontSize: \"14px\",\n          textAlign: \"left\",\n          color: \"#282828\",\n          borderBottom: \"solid 1px #dde1ea\"\n        },\n        parentDiv1:{\n        \tposition: \"relative\"\n        },\n        inputArae:{\n        \twidth: \"100%\",\n        \tborder: \"none\",\n          lineHeight: \"32px\",\n          fontSize: \"14px\",\n          textAlign: \"left\",\n          color: \"#282828\",\n          borderBottom: \"solid 1px #dde1ea\",\n          paddingRight: \"32px\"\n        },\n        redColor:{\n        \tcolor: \"#298ddb\"\n        },\n        textarea:{\n        \theight: \"100px\",\n          margin: 0,\n          wordBreak: \"break-word\",\n          textAlign: \"left\",\n          fontSize: \"14px\",\n         \tborderRadius: \"4px\",\n          width: \"100%\",\n          border: \"solid 1px #dde1ea\"\n        },\n        select:{\n          padding: 0,\n          margin: 0,\n          backgroundColor: \"white\",\n          width: \"100%\",\n        \tborder: \"none\",\n          lineHeight: \"32px\",\n          fontSize: \"14px\",\n          textAlign: \"left\",\n          color: \"#282828\",\n          borderBottom: \"solid 1px #dde1ea\"\n        },\n        parentDiv:{\n          position: \"relative\",\n        \toverflow: \"hidden\",\n          paddingLeft: \"40px\"\n        },\n        radioSp:{\n          width: \"40px\",\n        \tposition: \"absolute\",\n        \tdisplay: \"block\",\n          left: \"0px\",\n          top: \"50%\",\n          transform: \"translate(0px,-50%)\",\n        \twebkitTransform: \"translate(0px,-50%)\"\n        },\n        labelSp:{\n        \tfontSize: \"14px\",\n          margin: \"0px\"\n        },\n        dateInput:{\n        \tmargin: 0,\n          padding: 0\n        }\n      };\n    \treturn (<div className=\"mainCard2\" style={mainStyle.mainCard2}>\n          {title===\"off\"?\n            <div style={{display:\"none\"}}></div>\n            :\n          \t<div className=\"mainCard2-title\" style={mainStyle.mainCard2Title}>{title}</div>\n          }\n          <div className=\"mainCard2-content\" style={mainStyle.mainCard2Content}>\n            {\n              data.length>0?\n              data.map(function(d,idx){\n                if(type===\"\u901A\u52E4\u5361\u5BA1\u6279\" || type===\"\u8F66\u8F86\u7533\u8BF7\u5BA1\u6279\" || type===\"\u6570\u636E\u4F20\u8F93\u7533\u8BF7\u5BA1\u6279\" || type===\"\u8BA1\u7B97\u673A\u90AE\u4EF6\u8D26\u53F7\u7533\u8BF7\u5BA1\u6279\" || type===\"\u65B0\u8D27\u7269\u51FA\u5382\u653E\u884C\u5BA1\u6279\" || type===\"\u4EBA\u5458\u589E\u8865\u5BA1\u6279\" || type===\"\u975E\u751F\u4EA7\u6027\u5728\u7EBF\u4F1A\u7B7E\u6D41\u7A0B\" || type===\"\u4F1A\u52A1\u670D\u52A1\u7533\u8BF7\u6D41\u7A0B\u5BA1\u6279\" || type===\"\u5BF9\u516C\u8D39\u7528\u4ED8\u6B3E\u7533\u8BF7\u5BA1\u6279\" || type===\"\u706B\u8F66\u7968\u9884\u8BA2\u7533\u8BF7\u5BA1\u6279\" || type===\"A\u7C7B\u573A\u6240\u4EBA\u5458\u51FA\u5165\u53CA\u62CD\u6444\u7533\u8BF7\" || type===\"\u624B\u673A\u5361\u53CA\u65E0\u7EBF\u7F51\u5361\u7533\u8BF7\" || type===\"\u56FD\u5185\u673A\u7968\u9884\u8BA2\u7533\u8BF7\" || type===\"\u8D2D\u7F6E\u8D44\u4EA7\u5728\u7EBF\u7533\u8BF7\" || type===\"\u4F1A\u6240\u8BA2\u623F\u6D41\u7A0B\" || type===\"\u4F9B\u5E94\u5546\u4FE1\u606F\u7EF4\u62A4\u7533\u8BF7\u6D41\u7A0B\" || type===\"\u7B49\u7EA7\u8C03\u6574\u5BA1\u6279\" || type===\"\u501F\u6B3E\u7533\u8BF7\" || type===\"\u4ED8\u6B3E\u9644\u5C5EOA\u6D41\u7A0B\" || type===\"\u8D44\u4EA7\u62A5\u5E9F/\u6539\u9020\u6D41\u7A0B\" || type===\"\u4F1A\u52A1\u670D\u52A1\u7533\u8BF7\u6D41\u7A0B\u7533\u8BF7\" || type===\"\u901A\u52E4\u5361\u7533\u8BF7\u6D41\u7A0B\u7533\u8BF7\" || type===\"\u706B\u8F66\u7968\u9884\u8BA2\u7533\u8BF7\u7533\u8BF7\" || type===\"\u8F66\u8F86\u7533\u8BF7\u7533\u8BF7\" || type===\"\u56FD\u5185\u673A\u7968\u9884\u8BA2\u7533\u8BF7\u7533\u8BF7\" || type===\"\u65B0\u8D27\u7269\u51FA\u5382\u653E\u884C\u7533\u8BF7\" || type===\"\u8003\u52E4\u5BA1\u6279\u5BA1\u6279\" || type===\"\u4E91\u5E73\u53F0\u6743\u9650\u7533\u8BF7\u5BA1\u6279\" || type ===\"\u5916\u57F9\u7533\u8BF7\" || type===\"\u6295\u8D44\u9879\u76EE\u53D8\u52A8\u7533\u8BF7\" || type===\"\u5185\u90E8\u5546\u57CE\u4F4E\u8017\uFF08\u542B\u4E09\u54C1\uFF09\u7269\u6599\u8BF7\u8D2D\u7533\u8BF7\" || type===\"\u8D44\u4EA7\u9500\u552E\u6D41\u7A0B\u5BA1\u6279\u7533\u8BF7\" ||  type===\"\u63A5\u5F85\u7533\u8BF7\u5BA1\u6279\" || type===\"\u4ED8\u6B3E\u7533\u8BF7\u5BA1\u6279\" || type===\"\u5185\u90E8\u5546\u57CE\u8D44\u4EA7\u8D2D\u7F6E\u7533\u8BF7\" || type===\"\u8D44\u4EA7\u91C7\u8D2D\u4F1A\u7B7E\u6D41\u7A0B\"){\n                \tif(d.constructor===Array){\n                    if(d[0].date && d[0].date==true){\n                    \tif(/\\*/.test(d[0].title)){\n                        return (<div style={mainStyle.list}>\n                          <div className=\"list-top\" style={mainStyle.listTop}><span style={mainStyle.redColor}>(\u5FC5\u586B)</span>{d[0].title.replace(/\\*/g,\"\")+': '}</div>\n                          <div className={/error/.test(d[0].className) || /error/.test(d[1].className)?\"list-bottom errorSP\":\"list-bottom\"} style={mainStyle.listBottom}><div className=\"dateInput\" style={mainStyle.dateInput}>\n                            {d[0].dataForm===\"YMDHm\"?\n                              <AMUI.DateTimeInput dateTime={d[0].val===\"\"?\"\u8BF7\u9009\u62E9\":d[0].val} interiorCustomHandler={_this.changeDate.bind(this,{dataIndex:d[0].index,dataIndex1:d[0].index1,dataIndex2:0})} />\n                              :\n                              d[0].dataForm===\"YMD\"?\n                                <AMUI.DateTimeInput dateTime={d[0].val===\"\"?\"\u8BF7\u9009\u62E9\":d[0].val} showTimePicker={false} format=\"YYYY-MM-DD\" minDate={d[0].minDate!==undefined && d[0].minDate!==\"\"?d[0].minDate:\"\"} maxDate={d[0].maxDate!==undefined && d[0].maxDate!==\"\"?d[0].maxDate:\"\"} interiorCustomHandler={_this.changeDate.bind(this,{dataIndex:d[0].index,dataIndex1:d[0].index1,dataIndex2:0})} />\n                                :\n                                <AMUI.DateTimeInput dateTime={d[0].val===\"\"?\"\u8BF7\u9009\u62E9\":d[0].val} showDatePicker={false} interiorCustomHandler={_this.changeDate.bind(this,{dataIndex:d[0].index,dataIndex1:d[0].index1,dataIndex2:0})} />\n                            }\n                            \u81F3\n                            {d[1].dataForm===\"YMDHm\"?\n                              <AMUI.DateTimeInput dateTime={d[1].val===\"\"?\"\u8BF7\u9009\u62E9\":d[1].val} interiorCustomHandler={_this.changeDate.bind(this,{dataIndex:d[1].index,dataIndex1:d[1].index1,dataIndex2:1})} />\n                              :\n                              d[1].dataForm===\"YMD\"?\n                                <AMUI.DateTimeInput dateTime={d[1].val===\"\"?\"\u8BF7\u9009\u62E9\":d[1].val} showTimePicker={false} format=\"YYYY-MM-DD\" minDate={d[1].minDate!==undefined && d[1].minDate!==\"\"?d[1].minDate:\"\"} maxDate={d[1].maxDate!==undefined && d[1].maxDate!==\"\"?d[1].maxDate:\"\"} interiorCustomHandler={_this.changeDate.bind(this,{dataIndex:d[1].index,dataIndex1:d[1].index1,dataIndex2:1})} />\n                                :\n                                <AMUI.DateTimeInput dateTime={d[1].val===\"\"?\"\u8BF7\u9009\u62E9\":d[1].val} showDatePicker={false} interiorCustomHandler={_this.changeDate.bind(this,{dataIndex:d[1].index,dataIndex1:d[1].index1,dataIndex2:1})} />\n                            }\n                          </div></div>\n                        </div>)\n                      }else{\n                        return (<div style={mainStyle.list}>\n                          <div className=\"list-top\" style={mainStyle.listTop}><span style={mainStyle.redColor}></span>{d[0].title.replace(/\\*/g,\"\")+': '}</div>\n                          <div className={/error/.test(d[0].className) || /error/.test(d[1].className)?\"list-bottom errorSP\":\"list-bottom\"} style={mainStyle.listBottom}><div className=\"dateInput\" style={mainStyle.dateInput}>\n                            {d[0].dataForm===\"YMDHm\"?\n                              <AMUI.DateTimeInput dateTime={d[0].val===\"\"?\"\u8BF7\u9009\u62E9\":d[0].val} interiorCustomHandler={_this.changeDate.bind(this,{dataIndex:d[0].index,dataIndex1:d[0].index1,dataIndex2:0})} />\n                              :\n                              d[0].dataForm===\"YMD\"?\n                                <AMUI.DateTimeInput dateTime={d[0].val===\"\"?\"\u8BF7\u9009\u62E9\":d[0].val} showTimePicker={false} interiorCustomHandler={_this.changeDate.bind(this,{dataIndex:d[0].index,dataIndex1:d[0].index1,dataIndex2:0})} />\n                                :\n                                <AMUI.DateTimeInput dateTime={d[0].val===\"\"?\"\u8BF7\u9009\u62E9\":d[0].val} showDatePicker={false} interiorCustomHandler={_this.changeDate.bind(this,{dataIndex:d[0].index,dataIndex1:d[0].index1,dataIndex2:0})} />\n                            }\n                            \u81F3\n                            {d[1].dataForm===\"YMDHm\"?\n                              <AMUI.DateTimeInput dateTime={d[1].val===\"\"?\"\u8BF7\u9009\u62E9\":d[1].val} interiorCustomHandler={_this.changeDate.bind(this,{dataIndex:d[1].index,dataIndex1:d[1].index1,dataIndex2:1})} />\n                              :\n                              d[1].dataForm===\"YMD\"?\n                                <AMUI.DateTimeInput dateTime={d[1].val===\"\"?\"\u8BF7\u9009\u62E9\":d[1].val} showTimePicker={false} interiorCustomHandler={_this.changeDate.bind(this,{dataIndex:d[1].index,dataIndex1:d[1].index1,dataIndex2:1})} />\n                                :\n                                <AMUI.DateTimeInput dateTime={d[1].val===\"\"?\"\u8BF7\u9009\u62E9\":d[1].val} showDatePicker={false} interiorCustomHandler={_this.changeDate.bind(this,{dataIndex:d[1].index,dataIndex1:d[1].index1,dataIndex2:1})} />\n                            }\n                          </div></div>\n                        </div>)\n                      }\n                    }else{\n                      if(/\\*/.test(d[0].title)){\n                        return (<div style={mainStyle.list}>\n                          <div className=\"list-top\" style={mainStyle.listTop}><span style={mainStyle.redColor}>(\u5FC5\u586B)</span>{d[0].title.replace(/\\*/g,\"\")+': '}</div>\n                          <div className={/error/.test(d[0].className)?\"list-bottom errorSP\":\"list-bottom\"} style={mainStyle.listBottom}><div className=\"otherInput\" style={mainStyle.dateInput}>\n                            {\n                              d.map(function(d1,idx1){\n                                if(d1.type===\"radio\" || d1.type===\"checkbox\"){\n                                  if(d1.inputText===false || d1.inputText===undefined || d1.inputText===null){\n                                    return (<div className=\"parentDiv\" style={mainStyle.parentDiv}><input style={mainStyle.radioSp} type={d1.type} id={d1.type+\"\"+idx+\"\"+idx1} disabled={d1.disabled} readOnly={d1.readOnly} data-index={d1.index} data-index1={d1.index1} data-index2={d1.index2} checked={d1.checked} onClick={_this.onRadioClick} /><label style={mainStyle.labelSp} htmlFor={d1.type+\"-\"+idx+\"-\"+idx1}>{d1.val}</label></div>)\n                                  }else{\n                                    return (<div className=\"parentDiv\" style={mainStyle.parentDiv}><input style={mainStyle.radioSp} type={d1.type} id={d1.type+\"\"+idx+\"\"+idx1} disabled={d1.disabled} readOnly={d1.readOnly} data-index={d1.index} data-index1={d1.index1} data-index2={d1.index2} checked={d1.checked} onClick={_this.onRadioClick} /><label style={mainStyle.labelSp} htmlFor={d1.type+\"\"+idx+\"\"+idx1}>{d1.val}</label><AInput placeholder=\"\u8BF7\u586B\u5199\u4FE1\u606F\" style={mainStyle.input} data-inputText={true} value={d1.inputText} data-index={d1.index} data-index1={d1.index1} data-index2={d1.index2} onBlur={_this.changeInput} /></div>)\n                                  }\n                                }else if(d1.type===\"text\"){\n                                \treturn(<div className=\"parentDiv\" style={mainStyle.parentDiv}><AInput placeholder=\"\u8BF7\u586B\u5199\u4FE1\u606F\" style={mainStyle.input} value={d1.val} data-index={d1.index} data-index1={d1.index1} data-index2={d1.index2} onBlur={_this.changeInput} /></div>)\n                                }\n                              })\n                            }\n                            </div></div>\n                        </div>)\n                      }else{\n                        return (<div style={mainStyle.list}>\n                          <div className=\"list-top\" style={mainStyle.listTop}><span style={mainStyle.redColor}></span>{d[0].title.replace(/\\*/g,\"\")+': '}</div>\n                          <div className={/error/.test(d[0].className)?\"list-bottom errorSP\":\"list-bottom\"} style={mainStyle.listBottom}><div className=\"otherInput\" style={mainStyle.dateInput}>\n                            {\n                              d.map(function(d1,idx1){\n                                if(d1.type===\"radio\" || d1.type===\"checkbox\"){\n                                  if(d1.inputText===false || d1.inputText===undefined || d1.inputText===null){\n                                    return (<div className=\"parentDiv\" style={mainStyle.parentDiv}><input style={mainStyle.radioSp} type={d1.type} id={d1.type+\"\"+idx+\"\"+idx1} disabled={d1.disabled} readOnly={d1.readOnly} data-index={d1.index} data-index1={d1.index1} data-index2={d1.index2} checked={d1.checked} onClick={_this.onRadioClick} /><label style={mainStyle.labelSp} htmlFor={d1.type+\"-\"+idx+\"-\"+idx1}>{d1.val}</label></div>)\n                                  }else{\n                                    return (<div className=\"parentDiv\" style={mainStyle.parentDiv}><input style={mainStyle.radioSp} type={d1.type} id={d1.type+\"\"+idx+\"\"+idx1} disabled={d1.disabled} readOnly={d1.readOnly} data-index={d1.index} data-index1={d1.index1} data-index2={d1.index2} checked={d1.checked} onClick={_this.onRadioClick} /><label style={mainStyle.labelSp} htmlFor={d1.type+\"\"+idx+\"\"+idx1}>{d1.val}</label><AInput placeholder=\"\u8BF7\u586B\u5199\u4FE1\u606F\" style={mainStyle.input} data-inputText={true} value={d1.inputText} data-index={d1.index} data-index1={d1.index1} data-index2={d1.index2} onBlur={_this.changeInput} /></div>)\n                                  }\n                                }else if(d1.type===\"text\"){\n                                \treturn(<div className=\"parentDiv\" style={mainStyle.parentDiv}><AInput placeholder=\"\u8BF7\u586B\u5199\u4FE1\u606F\" style={mainStyle.input} value={d1.val} data-index={d1.index} data-index1={d1.index1} data-index2={d1.index2} onBlur={_this.changeInput} /></div>)\n                                }\n                              })\n                            }\n                            </div></div>\n                        </div>)\n                      }\n                    }\n                  }else{\n                  \tif(/\\*/.test(d.title)){\n                      if(d.tag===\"INPUT\"){\n                        if(d.date==true){\n                          return (<div style={mainStyle.list}>\n                              <div className=\"list-top\" style={mainStyle.listTop}><span style={mainStyle.redColor}>(\u5FC5\u586B)</span>{d.title.replace(/\\*/g,\"\")+': '}</div>\n                              <div className={/error/.test(d.className)?\"list-bottom errorSP\":\"list-bottom\"} style={mainStyle.listBottom}><div className=\"dateInput\" style={mainStyle.dateInput}>\n                                {d.dataForm===\"YMDHm\"?\n                                  <AMUI.DateTimeInput dateTime={d.val===\"\"?\"\u8BF7\u9009\u62E9\":d.val} interiorCustomHandler={_this.changeDate.bind(this,{dataIndex:d.index,dataIndex1:d.index1})} />\n                                  :\n                                  d.dataForm===\"YMD\"?\n                                    <AMUI.DateTimeInput disabled={d.disabled===undefined?false:d.disabled} dateTime={d.val===\"\"?\"\u8BF7\u9009\u62E9\":d.val} showTimePicker={false} format=\"YYYY-MM-DD\" minDate={d.minDate!==undefined && d.minDate!==\"\"?d.minDate:\"\"} maxDate={d.maxDate!==undefined && d.maxDate!==\"\"?d.maxDate:\"\"} interiorCustomHandler={_this.changeDate.bind(this,{dataIndex:d.index,dataIndex1:d.index1})} />\n                                    :\n                                    <AMUI.DateTimeInput dateTime={d.val===\"\"?\"\u8BF7\u9009\u62E9\":d.val} showDatePicker={false} interiorCustomHandler={_this.changeDate.bind(this,{dataIndex:d.index,dataIndex1:d.index1})} />\n                                }\n                                </div></div>\n                            </div>)\n                        }else{\n                          if(d.disabled===true || d.readOnly===true){\n                            return (<div style={mainStyle.list}><span className=\"list-title\" style={mainStyle.listLeft}>{d.title.replace(/\\*/g,\"\")+': '}</span><span className=\"list-content\" style={mainStyle.listRight}>{d.val}</span></div>)\n                          }else{\n                            if(d.dataForm && d.dataForm!==undefined && d.dataForm!==null && d.dataForm===\"area\"){\n                              return (<div style={mainStyle.list}>\n                                  <div className=\"list-top\" style={mainStyle.listTop}><span style={mainStyle.redColor}>(\u5FC5\u586B)</span>{d.title.replace(/\\*/g,\"\")+': '}</div>\n                                  <div className={/error/.test(d.className)?\"list-bottom errorSP\":\"list-bottom\"} style={mainStyle.listBottom}>\n                                    <div className=\"parentDiv1\" style={mainStyle.parentDiv1}><AInput disabled={d.disabled} readOnly={d.readOnly} value={d.val} style={mainStyle.inputArae} /><div className=\"searchArea\" data-index={d.index} data-index1={d.index1} onClick={_this.changeArea}></div></div>\n                                  </div>\n                                </div>)\n                            }else{\n                              return (<div style={mainStyle.list}>\n                                  <div className=\"list-top\" style={mainStyle.listTop}><span style={mainStyle.redColor}>(\u5FC5\u586B)</span>{d.title.replace(/\\*/g,\"\")+': '}</div>\n                                  {d.id!==undefined && d.id===\"VADID_Ridernum\"?\n                                    <div className={/error/.test(d.className)?\"list-bottom errorSP\":\"list-bottom\"} style={mainStyle.listBottom}><AInput placeholder=\"\u8BF7\u586B\u5199\u4FE1\u606F\" style={mainStyle.input} value={d.val} data-index={d.index} data-index1={d.index1} onBlur={_this.checkInput}/></div>\n                                    :\n                                  \t<div className={/error/.test(d.className)?\"list-bottom errorSP\":\"list-bottom\"} style={mainStyle.listBottom}><AInput placeholder=\"\u8BF7\u586B\u5199\u4FE1\u606F\" style={mainStyle.input} value={d.val} data-index={d.index} data-index1={d.index1} onBlur={_this.changeInput} /></div>\n                                  }\n                                </div>)\n                            }\n                          }\n                        }\n                      }else if(d.tag===\"TEXTAREA\"){\n                        if(d.disabled===true || d.readOnly===true){\n                          return (<div style={mainStyle.list}><span className=\"list-title\" style={mainStyle.listLeft}>{d.title.replace(/\\*/g,\"\")+': '}</span><span className=\"list-content\" style={mainStyle.listRight}>{d.val}</span></div>)\n                        }else{\n                          return (<div style={mainStyle.list}>\n                              <div className=\"list-top\" style={mainStyle.listTop}><span style={mainStyle.redColor}>(\u5FC5\u586B)</span>{d.title.replace(/\\*/g,\"\")+': '}</div>\n                              <div className={/error/.test(d.className)?\"list-bottom errorSP\":\"list-bottom\"} style={mainStyle.listBottom}><ATextarea style={mainStyle.textarea} placeholder=\"\u8BF7\u586B\u5199\u4FE1\u606F\" value={d.val} data-index={d.index} data-index1={d.index1} onBlur={_this.changeTextarea}></ATextarea></div>\n                            </div>)\n                        }\n                      }else if(d.tag===\"SELECT\"){\n                        if(d.disabled===true){\n                          return (<div style={mainStyle.list}><span className=\"list-title\" style={mainStyle.listLeft}>{d.title.replace(/\\*/g,\"\")+': '}</span><span className=\"list-content\" style={mainStyle.listRight}>{d.val}</span></div>)\n                        }else{\n                          return (<div style={mainStyle.list}>\n                              <div className=\"list-top\" style={mainStyle.listTop}><span style={mainStyle.redColor}>(\u5FC5\u586B)</span>{d.title.replace(/\\*/g,\"\")+': '}</div>\n                              <div className={/error/.test(d.className)?\"list-bottom errorSP\":\"list-bottom\"} style={mainStyle.listBottom}>\n                                <select style={mainStyle.select} value={d.val} data-index={d.index} data-index1={d.index1} onChange={_this.changeSelect} onClick={_this.onClickSelect}>\n                                  {\n                                    d.options.map(function(d1,idx1){\n                                      return (<option data-index={d1.dataIndex} value={d1.val}>{d1.text}</option>)\n                                    })\n                                  }\n                                </select>\n                              </div>\n                            </div>)\n                        }\n                      }\n                    }else{\n                      if(d.tag===\"INPUT\"){\n                        if(d.date==true){\n                          return (<div style={mainStyle.list}>\n                              <div className=\"list-top\" style={mainStyle.listTop}><span style={mainStyle.redColor}></span>{d.title.replace(/\\*/g,\"\")+': '}</div>\n                              <div className={/error/.test(d.className)?\"list-bottom errorSP\":\"list-bottom\"} style={mainStyle.listBottom}><div className=\"dateInput\" style={mainStyle.dateInput}>\n                                {d.dataForm===\"YMDHm\"?\n                                  <AMUI.DateTimeInput dateTime={d.val===\"\"?\"\u8BF7\u9009\u62E9\":d.val} interiorCustomHandler={_this.changeDate.bind(this,{dataIndex:d.index,dataIndex1:d.index1})} />\n                                  :\n                                  d.dataForm===\"YMD\"?\n                                    <AMUI.DateTimeInput dateTime={d.val===\"\"?\"\u8BF7\u9009\u62E9\":d.val} showTimePicker={false} format=\"YYYY-MM-DD\" minDate={d.minDate!==undefined && d.minDate!==\"\"?d.minDate:\"\"} maxDate={d.maxDate!==undefined && d.maxDate!==\"\"?d.maxDate:\"\"} interiorCustomHandler={_this.changeDate.bind(this,{dataIndex:d.index,dataIndex1:d.index1})} />\n                                    :\n                                    <AMUI.DateTimeInput dateTime={d.val===\"\"?\"\u8BF7\u9009\u62E9\":d.val} showDatePicker={false} interiorCustomHandler={_this.changeDate.bind(this,{dataIndex:d.index,dataIndex1:d.index1})} />\n                                }\n                                </div></div>\n                            </div>)\n                        }else{\n                          if(d.disabled===true || d.readOnly===true){\n                            return (<div style={mainStyle.list}><span className=\"list-title\" style={mainStyle.listLeft}>{d.title+': '}</span><span className=\"list-content\" style={mainStyle.listRight}>{d.val}</span></div>)\n                          }else{\n                            if(d.dataForm && d.dataForm!==undefined && d.dataForm!==null && d.dataForm===\"area\"){\n                              return (<div style={mainStyle.list}>\n                                  <div className=\"list-top\" style={mainStyle.listTop}>{d.title.replace(/\\*/g,\"\")+': '}</div>\n                                  <div className={/error/.test(d.className)?\"list-bottom errorSP\":\"list-bottom\"} style={mainStyle.listBottom}>\n                                    <div className=\"parentDiv1\" style={mainStyle.parentDiv1}><AInput disabled={d.disabled} readOnly={d.readOnly} value={d.val} style={mainStyle.inputArae} /><div className=\"searchArea\" data-index={d.index} data-index1={d.index1} onClick={_this.changeArea}></div></div>\n                                  </div>\n                                </div>)\n                            }else{\n                              return (<div style={mainStyle.list}>\n                                  <div className=\"list-top\" style={mainStyle.listTop}>{d.title.replace(/\\*/g,\"\")+': '}</div>\n                                  {(d.id!==undefined && (d.id===\"VADID_Ridernum\" || d.id===\"approvalmoney\")) || (d.name!==undefined && (d.name===\"Visitingnumber\" || d.name===\"Wemeetingnumber\"))?\n                                    <div className={/error/.test(d.className)?\"list-bottom errorSP\":\"list-bottom\"} style={mainStyle.listBottom}><AInput placeholder=\"\u8BF7\u586B\u5199\u4FE1\u606F\" style={mainStyle.input} value={d.val} data-index={d.index} data-index1={d.index1} onBlur={_this.checkInput} /></div>\n                                    :\n                                  \t<div className={/error/.test(d.className)?\"list-bottom errorSP\":\"list-bottom\"} style={mainStyle.listBottom}><AInput placeholder=\"\u8BF7\u586B\u5199\u4FE1\u606F\" style={mainStyle.input} value={d.val} data-index={d.index} data-index1={d.index1} onBlur={_this.changeInput} /></div>\n                                  }\n                                </div>)\n                            }\n                          }\n                        }\n                      }else if(d.tag===\"TEXTAREA\"){\n                        if(d.disabled===true || d.readOnly===true){\n                          return (<div style={mainStyle.list}><span className=\"list-title\" style={mainStyle.listLeft}>{d.title+': '}</span><span className=\"list-content\" style={mainStyle.listRight}>{d.val}</span></div>)\n                        }else{\n                          return (<div style={mainStyle.list}>\n                              <div className=\"list-top\" style={mainStyle.listTop}>{d.title.replace(/\\*/g,\"\")+': '}</div>\n                              <div className={/error/.test(d.className)?\"list-bottom errorSP\":\"list-bottom\"} style={mainStyle.listBottom}><ATextarea style={mainStyle.textarea} placeholder=\"\u8BF7\u586B\u5199\u4FE1\u606F\" value={d.val} data-index={d.index} data-index1={d.index1} onBlur={_this.changeTextarea}></ATextarea></div>\n                            </div>)\n                        }\n                      }else if(d.tag===\"SELECT\"){\n                        if(d.disabled===true){\n                          return (<div style={mainStyle.list}><span className=\"list-title\" style={mainStyle.listLeft}>{d.title+': '}</span><span className=\"list-content\" style={mainStyle.listRight}>{d.val}</span></div>)\n                        }else{\n                          return (<div style={mainStyle.list}>\n                              <div className=\"list-top\" style={mainStyle.listTop}><span style={mainStyle.redColor}></span>{d.title.replace(/\\*/g,\"\")+': '}</div>\n                              <div className={/error/.test(d.className)?\"list-bottom errorSP\":\"list-bottom\"} style={mainStyle.listBottom}>\n                                <select style={mainStyle.select} value={d.val} data-index={d.index} data-index1={d.index1} onChange={_this.changeSelect}>\n                                  {\n                                    d.options.map(function(d1,idx1){\n                                      return (<option data-index={d1.dataIndex} value={d1.val}>{d1.text}</option>)\n                                    })\n                                  }\n                                </select>\n                              </div>\n                            </div>)\n                        }\n                      }else{\n                        return (<div style={mainStyle.list}><span className=\"list-title\" style={mainStyle.listLeft}>{d.title+': '}</span><span className=\"list-content\" style={mainStyle.listRight}>{d.val}</span></div>)\n                      }\n                    }\n                  }\n                }\n              })\n              :\n              <div style={{display:\"none\"}}></div>\n            }\n            </div>\n        </div>)\n    }\n  }\n})\nmodule.exports=mainCard;";
      return "\"use strict\";\n\nvar mainCard = React.createClass({\n  displayName: \"mainCard\",\n\n  onRadioClick: function onRadioClick(e) {\n    var target = e.target;\n    var handler = this.props.customHandler;\n    if (handler) {\n      handler({\n        data: {\n          dataIndex: target.getAttribute(\"data-index\"),\n          dataIndex1: target.getAttribute(\"data-index1\"),\n          dataIndex2: target.getAttribute(\"data-index2\")\n        },\n        eventType: {\n          eventDataType: \"click\",\n          eventTarget: \"radio\"\n        }\n      });\n    }\n  },\n  changeDate1: function changeDate1(data) {\n    var myDate = new Date();\n    var handler = this.props.customHandler;\n    if (handler) {\n      handler({\n        data: {\n          dataValue: myDate.toLocaleDateString().replace(/\\//g, \"-\") + \" 00:00\",\n          dataIndex: data.dataIndex,\n          dataIndex1: data.dataIndex1\n        },\n        eventType: {\n          eventDataType: \"date\"\n        }\n      });\n    }\n  },\n  changeDate: function changeDate(data, time) {\n    var handler = this.props.customHandler;\n    if (handler) {\n      handler({\n        data: {\n          dataValue: time.value,\n          dataIndex: data.dataIndex,\n          dataIndex1: data.dataIndex1,\n          dataIndex2: data.dataIndex2\n        },\n        eventType: {\n          eventDataType: \"date\"\n        }\n      });\n    }\n  },\n  checkInput: function checkInput(e) {\n    var target = e.target;\n    var handler = this.props.customHandler;\n    var value = target.value;\n    if (isNaN(target.value)) {\n      target.value = \"\";\n      if (handler) {\n        handler({\n          data: {\n            dataValue: \"\",\n            dataInputText: target.getAttribute(\"data-inputText\"),\n            dataIndex: target.getAttribute(\"data-index\"),\n            dataIndex1: target.getAttribute(\"data-index1\"),\n            dataIndex2: target.getAttribute(\"data-index2\")\n          },\n          eventType: {\n            eventDataType: \"change\",\n            eventTarget: \"input\"\n          }\n        });\n      }\n    } else {\n      if (handler) {\n        handler({\n          data: {\n            dataValue: target.value,\n            dataInputText: target.getAttribute(\"data-inputText\"),\n            dataIndex: target.getAttribute(\"data-index\"),\n            dataIndex1: target.getAttribute(\"data-index1\"),\n            dataIndex2: target.getAttribute(\"data-index2\")\n          },\n          eventType: {\n            eventDataType: \"change\",\n            eventTarget: \"input\"\n          }\n        });\n      }\n    }\n  },\n  changeInput: function changeInput(e) {\n    var target = e.target;\n    var handler = this.props.customHandler;\n    if (handler) {\n      handler({\n        data: {\n          dataValue: target.value,\n          dataInputText: target.getAttribute(\"data-inputText\"),\n          dataIndex: target.getAttribute(\"data-index\"),\n          dataIndex1: target.getAttribute(\"data-index1\"),\n          dataIndex2: target.getAttribute(\"data-index2\")\n        },\n        eventType: {\n          eventDataType: \"change\",\n          eventTarget: \"input\"\n        }\n      });\n    }\n  },\n  changeArea: function changeArea(e) {\n    var target = e.target;\n    var value = $(target).prev().val();\n    var handler = this.props.customHandler;\n    if (handler) {\n      handler({\n        data: {\n          dataValue: value,\n          dataIndex: target.getAttribute(\"data-index\"),\n          dataIndex1: target.getAttribute(\"data-index1\")\n        },\n        eventType: {\n          eventDataType: \"area\"\n        }\n      });\n    }\n  },\n  changeTextarea: function changeTextarea(e) {\n    var target = e.target;\n    var handler = this.props.customHandler;\n    if (handler) {\n      handler({\n        data: {\n          dataValue: target.value,\n          dataIndex: target.getAttribute(\"data-index\"),\n          dataIndex1: target.getAttribute(\"data-index1\")\n        },\n        eventType: {\n          eventDataType: \"change\",\n          eventTarget: \"textarea\"\n        }\n      });\n    }\n  },\n  onClickSelect: function onClickSelect(e) {\n    var target = e.target;\n    var handler = this.props.customHandler;\n    if (handler) {\n      handler({\n        data: {\n          dataValue: target.value,\n          dataIndex: target.getAttribute(\"data-index\"),\n          dataIndex1: target.getAttribute(\"data-index1\")\n        },\n        eventType: {\n          eventDataType: \"click\",\n          eventTarget: \"select\"\n        }\n      });\n    }\n  },\n  changeSelect: function changeSelect(e) {\n    var target = e.target;\n    var handler = this.props.customHandler;\n    if (handler) {\n      handler({\n        data: {\n          dataValue: target.value,\n          dataIndex: target.getAttribute(\"data-index\"),\n          dataIndex1: target.getAttribute(\"data-index1\")\n        },\n        eventType: {\n          eventDataType: \"change\",\n          eventTarget: \"select\"\n        }\n      });\n    }\n  },\n  render: function render() {\n    var _this = this;\n    var data = this.props.customData;\n    var type = this.props.type;\n    var title = this.props.title === undefined ? \"off\" : this.props.title;\n    function mvc_Int(evt) {\n      var code = evt.keyCode;\n      return IsNumericAllow(code);\n    }\n    function IsNumericAllow(code) {\n      if (code > 95 && code < 106 || code > 32 && code < 41 || code > 47 && code < 58 || code == 8 || code == 46 || code == 9 || code == 13) return true;else return false;\n    }\n    if (type === \"\u901A\u52E4\u5361\u5BA1\u6279\" || type === \"\u8F66\u8F86\u7533\u8BF7\u5BA1\u6279\" || type === \"\u6570\u636E\u4F20\u8F93\u7533\u8BF7\u5BA1\u6279\" || type === \"\u8BA1\u7B97\u673A\u90AE\u4EF6\u8D26\u53F7\u7533\u8BF7\u5BA1\u6279\" || type === \"\u65B0\u8D27\u7269\u51FA\u5382\u653E\u884C\u5BA1\u6279\" || type === \"\u4EBA\u5458\u589E\u8865\u5BA1\u6279\" || type === \"\u975E\u751F\u4EA7\u6027\u5728\u7EBF\u4F1A\u7B7E\u6D41\u7A0B\" || type === \"\u4F1A\u52A1\u670D\u52A1\u7533\u8BF7\u6D41\u7A0B\u5BA1\u6279\" || type === \"\u5BF9\u516C\u8D39\u7528\u4ED8\u6B3E\u7533\u8BF7\u5BA1\u6279\" || type === \"\u706B\u8F66\u7968\u9884\u8BA2\u7533\u8BF7\u5BA1\u6279\" || type === \"A\u7C7B\u573A\u6240\u4EBA\u5458\u51FA\u5165\u53CA\u62CD\u6444\u7533\u8BF7\" || type === \"\u624B\u673A\u5361\u53CA\u65E0\u7EBF\u7F51\u5361\u7533\u8BF7\" || type === \"\u56FD\u5185\u673A\u7968\u9884\u8BA2\u7533\u8BF7\" || type === \"\u8D2D\u7F6E\u8D44\u4EA7\u5728\u7EBF\u7533\u8BF7\" || type === \"\u4F1A\u6240\u8BA2\u623F\u6D41\u7A0B\" || type === \"\u4F9B\u5E94\u5546\u4FE1\u606F\u7EF4\u62A4\u7533\u8BF7\u6D41\u7A0B\" || type === \"\u7B49\u7EA7\u8C03\u6574\u5BA1\u6279\" || type === \"\u501F\u6B3E\u7533\u8BF7\" || type === \"\u4ED8\u6B3E\u9644\u5C5EOA\u6D41\u7A0B\" || type === \"\u8D44\u4EA7\u62A5\u5E9F/\u6539\u9020\u6D41\u7A0B\" || type === \"\u4F1A\u52A1\u670D\u52A1\u7533\u8BF7\u6D41\u7A0B\u7533\u8BF7\" || type === \"\u901A\u52E4\u5361\u7533\u8BF7\u6D41\u7A0B\u7533\u8BF7\" || type === \"\u706B\u8F66\u7968\u9884\u8BA2\u7533\u8BF7\u7533\u8BF7\" || type === \"\u8F66\u8F86\u7533\u8BF7\u7533\u8BF7\" || type === \"\u56FD\u5185\u673A\u7968\u9884\u8BA2\u7533\u8BF7\u7533\u8BF7\" || type === \"\u65B0\u8D27\u7269\u51FA\u5382\u653E\u884C\u7533\u8BF7\" || type === \"\u8003\u52E4\u5BA1\u6279\u5BA1\u6279\" || type === \"\u4E91\u5E73\u53F0\u6743\u9650\u7533\u8BF7\u5BA1\u6279\" || type === \"\u5916\u57F9\u7533\u8BF7\" || type === \"\u6295\u8D44\u9879\u76EE\u53D8\u52A8\u7533\u8BF7\" || type === \"\u5185\u90E8\u5546\u57CE\u4F4E\u8017\uFF08\u542B\u4E09\u54C1\uFF09\u7269\u6599\u8BF7\u8D2D\u7533\u8BF7\" || type === \"\u8D44\u4EA7\u9500\u552E\u6D41\u7A0B\u5BA1\u6279\u7533\u8BF7\" || type === \"\u63A5\u5F85\u7533\u8BF7\u5BA1\u6279\" || type === \"\u4ED8\u6B3E\u7533\u8BF7\u5BA1\u6279\" || type === \"\u5185\u90E8\u5546\u57CE\u8D44\u4EA7\u8D2D\u7F6E\u7533\u8BF7\" || type === \"\u8D44\u4EA7\u91C7\u8D2D\u4F1A\u7B7E\u6D41\u7A0B\") {\n      var mainStyle = {\n        mainCard2: {\n          marginLeft: \"10px\",\n          marginRight: \"10px\",\n          marginBottom: \"10px\",\n          padding: \"20px 0px\",\n          background: \"white\",\n          borderRadius: \"4px\"\n        },\n        mainCard2Title: {\n          paddingLeft: \"10px\",\n          marginBottom: \"10px\",\n          borderLeft: \"solid 4px #ffac20\",\n          color: \"#2d2f34\",\n          fontSize: \"16px\",\n          fontWeight: \"bold\"\n        },\n        color: {\n          color: \"#5f78c7\"\n        },\n        mainCard2Content: {\n          borderRadius: \"4px\",\n          padding: \"10px 15px\",\n          fontSize: \"14px\"\n        },\n        li: {\n          margin: \"5px 0px\",\n          borderRadius: \"4px\",\n          listStyle: \"none\",\n          border: \"4px\",\n          background: \"#f0f3fb\"\n        },\n        list: {\n          padding: \"5px 0px\"\n        },\n        listLeft: {\n          wordBreak: \"break-all\",\n          color: \"#5f6a7b\",\n          fontWeight: \"bold\"\n        },\n        listRight: {\n          wordBreak: \"break-all\",\n          color: \"#81889d\"\n        },\n        listTop: {\n          color: \"#5f6a7b\",\n          fontWeight: \"bold\"\n        },\n        listBottom: {\n          color: \"#81889d\"\n        },\n        input: {\n          width: \"100%\",\n          border: \"none\",\n          lineHeight: \"32px\",\n          fontSize: \"14px\",\n          textAlign: \"left\",\n          color: \"#282828\",\n          borderBottom: \"solid 1px #dde1ea\"\n        },\n        parentDiv1: {\n          position: \"relative\"\n        },\n        inputArae: {\n          width: \"100%\",\n          border: \"none\",\n          lineHeight: \"32px\",\n          fontSize: \"14px\",\n          textAlign: \"left\",\n          color: \"#282828\",\n          borderBottom: \"solid 1px #dde1ea\",\n          paddingRight: \"32px\"\n        },\n        redColor: {\n          color: \"#298ddb\"\n        },\n        textarea: {\n          height: \"100px\",\n          margin: 0,\n          wordBreak: \"break-word\",\n          textAlign: \"left\",\n          fontSize: \"14px\",\n          borderRadius: \"4px\",\n          width: \"100%\",\n          border: \"solid 1px #dde1ea\"\n        },\n        select: {\n          padding: 0,\n          margin: 0,\n          backgroundColor: \"white\",\n          width: \"100%\",\n          border: \"none\",\n          lineHeight: \"32px\",\n          fontSize: \"14px\",\n          textAlign: \"left\",\n          color: \"#282828\",\n          borderBottom: \"solid 1px #dde1ea\"\n        },\n        parentDiv: {\n          position: \"relative\",\n          overflow: \"hidden\",\n          paddingLeft: \"40px\"\n        },\n        radioSp: {\n          width: \"40px\",\n          position: \"absolute\",\n          display: \"block\",\n          left: \"0px\",\n          top: \"50%\",\n          transform: \"translate(0px,-50%)\",\n          webkitTransform: \"translate(0px,-50%)\"\n        },\n        labelSp: {\n          fontSize: \"14px\",\n          margin: \"0px\"\n        },\n        dateInput: {\n          margin: 0,\n          padding: 0\n        }\n      };\n      return React.createElement(\n        \"div\",\n        { className: \"mainCard2\", style: mainStyle.mainCard2 },\n        title === \"off\" ? React.createElement(\"div\", { style: { display: \"none\" } }) : React.createElement(\n          \"div\",\n          { className: \"mainCard2-title\", style: mainStyle.mainCard2Title },\n          title\n        ),\n        React.createElement(\n          \"div\",\n          { className: \"mainCard2-content\", style: mainStyle.mainCard2Content },\n          data.length > 0 ? data.map(function (d, idx) {\n            if (type === \"\u901A\u52E4\u5361\u5BA1\u6279\" || type === \"\u8F66\u8F86\u7533\u8BF7\u5BA1\u6279\" || type === \"\u6570\u636E\u4F20\u8F93\u7533\u8BF7\u5BA1\u6279\" || type === \"\u8BA1\u7B97\u673A\u90AE\u4EF6\u8D26\u53F7\u7533\u8BF7\u5BA1\u6279\" || type === \"\u65B0\u8D27\u7269\u51FA\u5382\u653E\u884C\u5BA1\u6279\" || type === \"\u4EBA\u5458\u589E\u8865\u5BA1\u6279\" || type === \"\u975E\u751F\u4EA7\u6027\u5728\u7EBF\u4F1A\u7B7E\u6D41\u7A0B\" || type === \"\u4F1A\u52A1\u670D\u52A1\u7533\u8BF7\u6D41\u7A0B\u5BA1\u6279\" || type === \"\u5BF9\u516C\u8D39\u7528\u4ED8\u6B3E\u7533\u8BF7\u5BA1\u6279\" || type === \"\u706B\u8F66\u7968\u9884\u8BA2\u7533\u8BF7\u5BA1\u6279\" || type === \"A\u7C7B\u573A\u6240\u4EBA\u5458\u51FA\u5165\u53CA\u62CD\u6444\u7533\u8BF7\" || type === \"\u624B\u673A\u5361\u53CA\u65E0\u7EBF\u7F51\u5361\u7533\u8BF7\" || type === \"\u56FD\u5185\u673A\u7968\u9884\u8BA2\u7533\u8BF7\" || type === \"\u8D2D\u7F6E\u8D44\u4EA7\u5728\u7EBF\u7533\u8BF7\" || type === \"\u4F1A\u6240\u8BA2\u623F\u6D41\u7A0B\" || type === \"\u4F9B\u5E94\u5546\u4FE1\u606F\u7EF4\u62A4\u7533\u8BF7\u6D41\u7A0B\" || type === \"\u7B49\u7EA7\u8C03\u6574\u5BA1\u6279\" || type === \"\u501F\u6B3E\u7533\u8BF7\" || type === \"\u4ED8\u6B3E\u9644\u5C5EOA\u6D41\u7A0B\" || type === \"\u8D44\u4EA7\u62A5\u5E9F/\u6539\u9020\u6D41\u7A0B\" || type === \"\u4F1A\u52A1\u670D\u52A1\u7533\u8BF7\u6D41\u7A0B\u7533\u8BF7\" || type === \"\u901A\u52E4\u5361\u7533\u8BF7\u6D41\u7A0B\u7533\u8BF7\" || type === \"\u706B\u8F66\u7968\u9884\u8BA2\u7533\u8BF7\u7533\u8BF7\" || type === \"\u8F66\u8F86\u7533\u8BF7\u7533\u8BF7\" || type === \"\u56FD\u5185\u673A\u7968\u9884\u8BA2\u7533\u8BF7\u7533\u8BF7\" || type === \"\u65B0\u8D27\u7269\u51FA\u5382\u653E\u884C\u7533\u8BF7\" || type === \"\u8003\u52E4\u5BA1\u6279\u5BA1\u6279\" || type === \"\u4E91\u5E73\u53F0\u6743\u9650\u7533\u8BF7\u5BA1\u6279\" || type === \"\u5916\u57F9\u7533\u8BF7\" || type === \"\u6295\u8D44\u9879\u76EE\u53D8\u52A8\u7533\u8BF7\" || type === \"\u5185\u90E8\u5546\u57CE\u4F4E\u8017\uFF08\u542B\u4E09\u54C1\uFF09\u7269\u6599\u8BF7\u8D2D\u7533\u8BF7\" || type === \"\u8D44\u4EA7\u9500\u552E\u6D41\u7A0B\u5BA1\u6279\u7533\u8BF7\" || type === \"\u63A5\u5F85\u7533\u8BF7\u5BA1\u6279\" || type === \"\u4ED8\u6B3E\u7533\u8BF7\u5BA1\u6279\" || type === \"\u5185\u90E8\u5546\u57CE\u8D44\u4EA7\u8D2D\u7F6E\u7533\u8BF7\" || type === \"\u8D44\u4EA7\u91C7\u8D2D\u4F1A\u7B7E\u6D41\u7A0B\") {\n              if (d.constructor === Array) {\n                if (d[0].date && d[0].date == true) {\n                  if (/\\*/.test(d[0].title)) {\n                    return React.createElement(\n                      \"div\",\n                      { style: mainStyle.list },\n                      React.createElement(\n                        \"div\",\n                        { className: \"list-top\", style: mainStyle.listTop },\n                        React.createElement(\n                          \"span\",\n                          { style: mainStyle.redColor },\n                          \"(\\u5FC5\\u586B)\"\n                        ),\n                        d[0].title.replace(/\\*/g, \"\") + ': '\n                      ),\n                      React.createElement(\n                        \"div\",\n                        { className: /error/.test(d[0].className) || /error/.test(d[1].className) ? \"list-bottom errorSP\" : \"list-bottom\", style: mainStyle.listBottom },\n                        React.createElement(\n                          \"div\",\n                          { className: \"dateInput\", style: mainStyle.dateInput },\n                          d[0].dataForm === \"YMDHm\" ? React.createElement(AMUI.DateTimeInput, { dateTime: d[0].val === \"\" ? \"\u8BF7\u9009\u62E9\" : d[0].val, interiorCustomHandler: _this.changeDate.bind(this, { dataIndex: d[0].index, dataIndex1: d[0].index1, dataIndex2: 0 }) }) : d[0].dataForm === \"YMD\" ? React.createElement(AMUI.DateTimeInput, { dateTime: d[0].val === \"\" ? \"\u8BF7\u9009\u62E9\" : d[0].val, showTimePicker: false, format: \"YYYY-MM-DD\", minDate: d[0].minDate !== undefined && d[0].minDate !== \"\" ? d[0].minDate : \"\", maxDate: d[0].maxDate !== undefined && d[0].maxDate !== \"\" ? d[0].maxDate : \"\", interiorCustomHandler: _this.changeDate.bind(this, { dataIndex: d[0].index, dataIndex1: d[0].index1, dataIndex2: 0 }) }) : React.createElement(AMUI.DateTimeInput, { dateTime: d[0].val === \"\" ? \"\u8BF7\u9009\u62E9\" : d[0].val, showDatePicker: false, interiorCustomHandler: _this.changeDate.bind(this, { dataIndex: d[0].index, dataIndex1: d[0].index1, dataIndex2: 0 }) }),\n                          \"\\u81F3\",\n                          d[1].dataForm === \"YMDHm\" ? React.createElement(AMUI.DateTimeInput, { dateTime: d[1].val === \"\" ? \"\u8BF7\u9009\u62E9\" : d[1].val, interiorCustomHandler: _this.changeDate.bind(this, { dataIndex: d[1].index, dataIndex1: d[1].index1, dataIndex2: 1 }) }) : d[1].dataForm === \"YMD\" ? React.createElement(AMUI.DateTimeInput, { dateTime: d[1].val === \"\" ? \"\u8BF7\u9009\u62E9\" : d[1].val, showTimePicker: false, format: \"YYYY-MM-DD\", minDate: d[1].minDate !== undefined && d[1].minDate !== \"\" ? d[1].minDate : \"\", maxDate: d[1].maxDate !== undefined && d[1].maxDate !== \"\" ? d[1].maxDate : \"\", interiorCustomHandler: _this.changeDate.bind(this, { dataIndex: d[1].index, dataIndex1: d[1].index1, dataIndex2: 1 }) }) : React.createElement(AMUI.DateTimeInput, { dateTime: d[1].val === \"\" ? \"\u8BF7\u9009\u62E9\" : d[1].val, showDatePicker: false, interiorCustomHandler: _this.changeDate.bind(this, { dataIndex: d[1].index, dataIndex1: d[1].index1, dataIndex2: 1 }) })\n                        )\n                      )\n                    );\n                  } else {\n                    return React.createElement(\n                      \"div\",\n                      { style: mainStyle.list },\n                      React.createElement(\n                        \"div\",\n                        { className: \"list-top\", style: mainStyle.listTop },\n                        React.createElement(\"span\", { style: mainStyle.redColor }),\n                        d[0].title.replace(/\\*/g, \"\") + ': '\n                      ),\n                      React.createElement(\n                        \"div\",\n                        { className: /error/.test(d[0].className) || /error/.test(d[1].className) ? \"list-bottom errorSP\" : \"list-bottom\", style: mainStyle.listBottom },\n                        React.createElement(\n                          \"div\",\n                          { className: \"dateInput\", style: mainStyle.dateInput },\n                          d[0].dataForm === \"YMDHm\" ? React.createElement(AMUI.DateTimeInput, { dateTime: d[0].val === \"\" ? \"\u8BF7\u9009\u62E9\" : d[0].val, interiorCustomHandler: _this.changeDate.bind(this, { dataIndex: d[0].index, dataIndex1: d[0].index1, dataIndex2: 0 }) }) : d[0].dataForm === \"YMD\" ? React.createElement(AMUI.DateTimeInput, { dateTime: d[0].val === \"\" ? \"\u8BF7\u9009\u62E9\" : d[0].val, showTimePicker: false, interiorCustomHandler: _this.changeDate.bind(this, { dataIndex: d[0].index, dataIndex1: d[0].index1, dataIndex2: 0 }) }) : React.createElement(AMUI.DateTimeInput, { dateTime: d[0].val === \"\" ? \"\u8BF7\u9009\u62E9\" : d[0].val, showDatePicker: false, interiorCustomHandler: _this.changeDate.bind(this, { dataIndex: d[0].index, dataIndex1: d[0].index1, dataIndex2: 0 }) }),\n                          \"\\u81F3\",\n                          d[1].dataForm === \"YMDHm\" ? React.createElement(AMUI.DateTimeInput, { dateTime: d[1].val === \"\" ? \"\u8BF7\u9009\u62E9\" : d[1].val, interiorCustomHandler: _this.changeDate.bind(this, { dataIndex: d[1].index, dataIndex1: d[1].index1, dataIndex2: 1 }) }) : d[1].dataForm === \"YMD\" ? React.createElement(AMUI.DateTimeInput, { dateTime: d[1].val === \"\" ? \"\u8BF7\u9009\u62E9\" : d[1].val, showTimePicker: false, interiorCustomHandler: _this.changeDate.bind(this, { dataIndex: d[1].index, dataIndex1: d[1].index1, dataIndex2: 1 }) }) : React.createElement(AMUI.DateTimeInput, { dateTime: d[1].val === \"\" ? \"\u8BF7\u9009\u62E9\" : d[1].val, showDatePicker: false, interiorCustomHandler: _this.changeDate.bind(this, { dataIndex: d[1].index, dataIndex1: d[1].index1, dataIndex2: 1 }) })\n                        )\n                      )\n                    );\n                  }\n                } else {\n                  if (/\\*/.test(d[0].title)) {\n                    return React.createElement(\n                      \"div\",\n                      { style: mainStyle.list },\n                      React.createElement(\n                        \"div\",\n                        { className: \"list-top\", style: mainStyle.listTop },\n                        React.createElement(\n                          \"span\",\n                          { style: mainStyle.redColor },\n                          \"(\\u5FC5\\u586B)\"\n                        ),\n                        d[0].title.replace(/\\*/g, \"\") + ': '\n                      ),\n                      React.createElement(\n                        \"div\",\n                        { className: /error/.test(d[0].className) ? \"list-bottom errorSP\" : \"list-bottom\", style: mainStyle.listBottom },\n                        React.createElement(\n                          \"div\",\n                          { className: \"otherInput\", style: mainStyle.dateInput },\n                          d.map(function (d1, idx1) {\n                            if (d1.type === \"radio\" || d1.type === \"checkbox\") {\n                              if (d1.inputText === false || d1.inputText === undefined || d1.inputText === null) {\n                                return React.createElement(\n                                  \"div\",\n                                  { className: \"parentDiv\", style: mainStyle.parentDiv },\n                                  React.createElement(\"input\", { style: mainStyle.radioSp, type: d1.type, id: d1.type + \"\" + idx + \"\" + idx1, disabled: d1.disabled, readOnly: d1.readOnly, \"data-index\": d1.index, \"data-index1\": d1.index1, \"data-index2\": d1.index2, checked: d1.checked, onClick: _this.onRadioClick }),\n                                  React.createElement(\n                                    \"label\",\n                                    { style: mainStyle.labelSp, htmlFor: d1.type + \"-\" + idx + \"-\" + idx1 },\n                                    d1.val\n                                  )\n                                );\n                              } else {\n                                return React.createElement(\n                                  \"div\",\n                                  { className: \"parentDiv\", style: mainStyle.parentDiv },\n                                  React.createElement(\"input\", { style: mainStyle.radioSp, type: d1.type, id: d1.type + \"\" + idx + \"\" + idx1, disabled: d1.disabled, readOnly: d1.readOnly, \"data-index\": d1.index, \"data-index1\": d1.index1, \"data-index2\": d1.index2, checked: d1.checked, onClick: _this.onRadioClick }),\n                                  React.createElement(\n                                    \"label\",\n                                    { style: mainStyle.labelSp, htmlFor: d1.type + \"\" + idx + \"\" + idx1 },\n                                    d1.val\n                                  ),\n                                  React.createElement(AInput, { placeholder: \"\\u8BF7\\u586B\\u5199\\u4FE1\\u606F\", style: mainStyle.input, \"data-inputText\": true, value: d1.inputText, \"data-index\": d1.index, \"data-index1\": d1.index1, \"data-index2\": d1.index2, onBlur: _this.changeInput })\n                                );\n                              }\n                            } else if (d1.type === \"text\") {\n                              return React.createElement(\n                                \"div\",\n                                { className: \"parentDiv\", style: mainStyle.parentDiv },\n                                React.createElement(AInput, { placeholder: \"\\u8BF7\\u586B\\u5199\\u4FE1\\u606F\", style: mainStyle.input, value: d1.val, \"data-index\": d1.index, \"data-index1\": d1.index1, \"data-index2\": d1.index2, onBlur: _this.changeInput })\n                              );\n                            }\n                          })\n                        )\n                      )\n                    );\n                  } else {\n                    return React.createElement(\n                      \"div\",\n                      { style: mainStyle.list },\n                      React.createElement(\n                        \"div\",\n                        { className: \"list-top\", style: mainStyle.listTop },\n                        React.createElement(\"span\", { style: mainStyle.redColor }),\n                        d[0].title.replace(/\\*/g, \"\") + ': '\n                      ),\n                      React.createElement(\n                        \"div\",\n                        { className: /error/.test(d[0].className) ? \"list-bottom errorSP\" : \"list-bottom\", style: mainStyle.listBottom },\n                        React.createElement(\n                          \"div\",\n                          { className: \"otherInput\", style: mainStyle.dateInput },\n                          d.map(function (d1, idx1) {\n                            if (d1.type === \"radio\" || d1.type === \"checkbox\") {\n                              if (d1.inputText === false || d1.inputText === undefined || d1.inputText === null) {\n                                return React.createElement(\n                                  \"div\",\n                                  { className: \"parentDiv\", style: mainStyle.parentDiv },\n                                  React.createElement(\"input\", { style: mainStyle.radioSp, type: d1.type, id: d1.type + \"\" + idx + \"\" + idx1, disabled: d1.disabled, readOnly: d1.readOnly, \"data-index\": d1.index, \"data-index1\": d1.index1, \"data-index2\": d1.index2, checked: d1.checked, onClick: _this.onRadioClick }),\n                                  React.createElement(\n                                    \"label\",\n                                    { style: mainStyle.labelSp, htmlFor: d1.type + \"-\" + idx + \"-\" + idx1 },\n                                    d1.val\n                                  )\n                                );\n                              } else {\n                                return React.createElement(\n                                  \"div\",\n                                  { className: \"parentDiv\", style: mainStyle.parentDiv },\n                                  React.createElement(\"input\", { style: mainStyle.radioSp, type: d1.type, id: d1.type + \"\" + idx + \"\" + idx1, disabled: d1.disabled, readOnly: d1.readOnly, \"data-index\": d1.index, \"data-index1\": d1.index1, \"data-index2\": d1.index2, checked: d1.checked, onClick: _this.onRadioClick }),\n                                  React.createElement(\n                                    \"label\",\n                                    { style: mainStyle.labelSp, htmlFor: d1.type + \"\" + idx + \"\" + idx1 },\n                                    d1.val\n                                  ),\n                                  React.createElement(AInput, { placeholder: \"\\u8BF7\\u586B\\u5199\\u4FE1\\u606F\", style: mainStyle.input, \"data-inputText\": true, value: d1.inputText, \"data-index\": d1.index, \"data-index1\": d1.index1, \"data-index2\": d1.index2, onBlur: _this.changeInput })\n                                );\n                              }\n                            } else if (d1.type === \"text\") {\n                              return React.createElement(\n                                \"div\",\n                                { className: \"parentDiv\", style: mainStyle.parentDiv },\n                                React.createElement(AInput, { placeholder: \"\\u8BF7\\u586B\\u5199\\u4FE1\\u606F\", style: mainStyle.input, value: d1.val, \"data-index\": d1.index, \"data-index1\": d1.index1, \"data-index2\": d1.index2, onBlur: _this.changeInput })\n                              );\n                            }\n                          })\n                        )\n                      )\n                    );\n                  }\n                }\n              } else {\n                if (/\\*/.test(d.title)) {\n                  if (d.tag === \"INPUT\") {\n                    if (d.date == true) {\n                      return React.createElement(\n                        \"div\",\n                        { style: mainStyle.list },\n                        React.createElement(\n                          \"div\",\n                          { className: \"list-top\", style: mainStyle.listTop },\n                          React.createElement(\n                            \"span\",\n                            { style: mainStyle.redColor },\n                            \"(\\u5FC5\\u586B)\"\n                          ),\n                          d.title.replace(/\\*/g, \"\") + ': '\n                        ),\n                        React.createElement(\n                          \"div\",\n                          { className: /error/.test(d.className) ? \"list-bottom errorSP\" : \"list-bottom\", style: mainStyle.listBottom },\n                          React.createElement(\n                            \"div\",\n                            { className: \"dateInput\", style: mainStyle.dateInput },\n                            d.dataForm === \"YMDHm\" ? React.createElement(AMUI.DateTimeInput, { dateTime: d.val === \"\" ? \"\u8BF7\u9009\u62E9\" : d.val, interiorCustomHandler: _this.changeDate.bind(this, { dataIndex: d.index, dataIndex1: d.index1 }) }) : d.dataForm === \"YMD\" ? React.createElement(AMUI.DateTimeInput, { disabled: d.disabled === undefined ? false : d.disabled, dateTime: d.val === \"\" ? \"\u8BF7\u9009\u62E9\" : d.val, showTimePicker: false, format: \"YYYY-MM-DD\", minDate: d.minDate !== undefined && d.minDate !== \"\" ? d.minDate : \"\", maxDate: d.maxDate !== undefined && d.maxDate !== \"\" ? d.maxDate : \"\", interiorCustomHandler: _this.changeDate.bind(this, { dataIndex: d.index, dataIndex1: d.index1 }) }) : React.createElement(AMUI.DateTimeInput, { dateTime: d.val === \"\" ? \"\u8BF7\u9009\u62E9\" : d.val, showDatePicker: false, interiorCustomHandler: _this.changeDate.bind(this, { dataIndex: d.index, dataIndex1: d.index1 }) })\n                          )\n                        )\n                      );\n                    } else {\n                      if (d.disabled === true || d.readOnly === true) {\n                        return React.createElement(\n                          \"div\",\n                          { style: mainStyle.list },\n                          React.createElement(\n                            \"span\",\n                            { className: \"list-title\", style: mainStyle.listLeft },\n                            d.title.replace(/\\*/g, \"\") + ': '\n                          ),\n                          React.createElement(\n                            \"span\",\n                            { className: \"list-content\", style: mainStyle.listRight },\n                            d.val\n                          )\n                        );\n                      } else {\n                        if (d.dataForm && d.dataForm !== undefined && d.dataForm !== null && d.dataForm === \"area\") {\n                          return React.createElement(\n                            \"div\",\n                            { style: mainStyle.list },\n                            React.createElement(\n                              \"div\",\n                              { className: \"list-top\", style: mainStyle.listTop },\n                              React.createElement(\n                                \"span\",\n                                { style: mainStyle.redColor },\n                                \"(\\u5FC5\\u586B)\"\n                              ),\n                              d.title.replace(/\\*/g, \"\") + ': '\n                            ),\n                            React.createElement(\n                              \"div\",\n                              { className: /error/.test(d.className) ? \"list-bottom errorSP\" : \"list-bottom\", style: mainStyle.listBottom },\n                              React.createElement(\n                                \"div\",\n                                { className: \"parentDiv1\", style: mainStyle.parentDiv1 },\n                                React.createElement(AInput, { disabled: d.disabled, readOnly: d.readOnly, value: d.val, style: mainStyle.inputArae }),\n                                React.createElement(\"div\", { className: \"searchArea\", \"data-index\": d.index, \"data-index1\": d.index1, onClick: _this.changeArea })\n                              )\n                            )\n                          );\n                        } else {\n                          return React.createElement(\n                            \"div\",\n                            { style: mainStyle.list },\n                            React.createElement(\n                              \"div\",\n                              { className: \"list-top\", style: mainStyle.listTop },\n                              React.createElement(\n                                \"span\",\n                                { style: mainStyle.redColor },\n                                \"(\\u5FC5\\u586B)\"\n                              ),\n                              d.title.replace(/\\*/g, \"\") + ': '\n                            ),\n                            d.id !== undefined && d.id === \"VADID_Ridernum\" ? React.createElement(\n                              \"div\",\n                              { className: /error/.test(d.className) ? \"list-bottom errorSP\" : \"list-bottom\", style: mainStyle.listBottom },\n                              React.createElement(AInput, { placeholder: \"\\u8BF7\\u586B\\u5199\\u4FE1\\u606F\", style: mainStyle.input, value: d.val, \"data-index\": d.index, \"data-index1\": d.index1, onBlur: _this.checkInput })\n                            ) : React.createElement(\n                              \"div\",\n                              { className: /error/.test(d.className) ? \"list-bottom errorSP\" : \"list-bottom\", style: mainStyle.listBottom },\n                              React.createElement(AInput, { placeholder: \"\\u8BF7\\u586B\\u5199\\u4FE1\\u606F\", style: mainStyle.input, value: d.val, \"data-index\": d.index, \"data-index1\": d.index1, onBlur: _this.changeInput })\n                            )\n                          );\n                        }\n                      }\n                    }\n                  } else if (d.tag === \"TEXTAREA\") {\n                    if (d.disabled === true || d.readOnly === true) {\n                      return React.createElement(\n                        \"div\",\n                        { style: mainStyle.list },\n                        React.createElement(\n                          \"span\",\n                          { className: \"list-title\", style: mainStyle.listLeft },\n                          d.title.replace(/\\*/g, \"\") + ': '\n                        ),\n                        React.createElement(\n                          \"span\",\n                          { className: \"list-content\", style: mainStyle.listRight },\n                          d.val\n                        )\n                      );\n                    } else {\n                      return React.createElement(\n                        \"div\",\n                        { style: mainStyle.list },\n                        React.createElement(\n                          \"div\",\n                          { className: \"list-top\", style: mainStyle.listTop },\n                          React.createElement(\n                            \"span\",\n                            { style: mainStyle.redColor },\n                            \"(\\u5FC5\\u586B)\"\n                          ),\n                          d.title.replace(/\\*/g, \"\") + ': '\n                        ),\n                        React.createElement(\n                          \"div\",\n                          { className: /error/.test(d.className) ? \"list-bottom errorSP\" : \"list-bottom\", style: mainStyle.listBottom },\n                          React.createElement(ATextarea, { style: mainStyle.textarea, placeholder: \"\\u8BF7\\u586B\\u5199\\u4FE1\\u606F\", value: d.val, \"data-index\": d.index, \"data-index1\": d.index1, onBlur: _this.changeTextarea })\n                        )\n                      );\n                    }\n                  } else if (d.tag === \"SELECT\") {\n                    if (d.disabled === true) {\n                      return React.createElement(\n                        \"div\",\n                        { style: mainStyle.list },\n                        React.createElement(\n                          \"span\",\n                          { className: \"list-title\", style: mainStyle.listLeft },\n                          d.title.replace(/\\*/g, \"\") + ': '\n                        ),\n                        React.createElement(\n                          \"span\",\n                          { className: \"list-content\", style: mainStyle.listRight },\n                          d.val\n                        )\n                      );\n                    } else {\n                      return React.createElement(\n                        \"div\",\n                        { style: mainStyle.list },\n                        React.createElement(\n                          \"div\",\n                          { className: \"list-top\", style: mainStyle.listTop },\n                          React.createElement(\n                            \"span\",\n                            { style: mainStyle.redColor },\n                            \"(\\u5FC5\\u586B)\"\n                          ),\n                          d.title.replace(/\\*/g, \"\") + ': '\n                        ),\n                        React.createElement(\n                          \"div\",\n                          { className: /error/.test(d.className) ? \"list-bottom errorSP\" : \"list-bottom\", style: mainStyle.listBottom },\n                          React.createElement(\n                            \"select\",\n                            { style: mainStyle.select, value: d.val, \"data-index\": d.index, \"data-index1\": d.index1, onChange: _this.changeSelect, onClick: _this.onClickSelect },\n                            d.options.map(function (d1, idx1) {\n                              return React.createElement(\n                                \"option\",\n                                { \"data-index\": d1.dataIndex, value: d1.val },\n                                d1.text\n                              );\n                            })\n                          )\n                        )\n                      );\n                    }\n                  }\n                } else {\n                  if (d.tag === \"INPUT\") {\n                    if (d.date == true) {\n                      return React.createElement(\n                        \"div\",\n                        { style: mainStyle.list },\n                        React.createElement(\n                          \"div\",\n                          { className: \"list-top\", style: mainStyle.listTop },\n                          React.createElement(\"span\", { style: mainStyle.redColor }),\n                          d.title.replace(/\\*/g, \"\") + ': '\n                        ),\n                        React.createElement(\n                          \"div\",\n                          { className: /error/.test(d.className) ? \"list-bottom errorSP\" : \"list-bottom\", style: mainStyle.listBottom },\n                          React.createElement(\n                            \"div\",\n                            { className: \"dateInput\", style: mainStyle.dateInput },\n                            d.dataForm === \"YMDHm\" ? React.createElement(AMUI.DateTimeInput, { dateTime: d.val === \"\" ? \"\u8BF7\u9009\u62E9\" : d.val, interiorCustomHandler: _this.changeDate.bind(this, { dataIndex: d.index, dataIndex1: d.index1 }) }) : d.dataForm === \"YMD\" ? React.createElement(AMUI.DateTimeInput, { dateTime: d.val === \"\" ? \"\u8BF7\u9009\u62E9\" : d.val, showTimePicker: false, format: \"YYYY-MM-DD\", minDate: d.minDate !== undefined && d.minDate !== \"\" ? d.minDate : \"\", maxDate: d.maxDate !== undefined && d.maxDate !== \"\" ? d.maxDate : \"\", interiorCustomHandler: _this.changeDate.bind(this, { dataIndex: d.index, dataIndex1: d.index1 }) }) : React.createElement(AMUI.DateTimeInput, { dateTime: d.val === \"\" ? \"\u8BF7\u9009\u62E9\" : d.val, showDatePicker: false, interiorCustomHandler: _this.changeDate.bind(this, { dataIndex: d.index, dataIndex1: d.index1 }) })\n                          )\n                        )\n                      );\n                    } else {\n                      if (d.disabled === true || d.readOnly === true) {\n                        return React.createElement(\n                          \"div\",\n                          { style: mainStyle.list },\n                          React.createElement(\n                            \"span\",\n                            { className: \"list-title\", style: mainStyle.listLeft },\n                            d.title + ': '\n                          ),\n                          React.createElement(\n                            \"span\",\n                            { className: \"list-content\", style: mainStyle.listRight },\n                            d.val\n                          )\n                        );\n                      } else {\n                        if (d.dataForm && d.dataForm !== undefined && d.dataForm !== null && d.dataForm === \"area\") {\n                          return React.createElement(\n                            \"div\",\n                            { style: mainStyle.list },\n                            React.createElement(\n                              \"div\",\n                              { className: \"list-top\", style: mainStyle.listTop },\n                              d.title.replace(/\\*/g, \"\") + ': '\n                            ),\n                            React.createElement(\n                              \"div\",\n                              { className: /error/.test(d.className) ? \"list-bottom errorSP\" : \"list-bottom\", style: mainStyle.listBottom },\n                              React.createElement(\n                                \"div\",\n                                { className: \"parentDiv1\", style: mainStyle.parentDiv1 },\n                                React.createElement(AInput, { disabled: d.disabled, readOnly: d.readOnly, value: d.val, style: mainStyle.inputArae }),\n                                React.createElement(\"div\", { className: \"searchArea\", \"data-index\": d.index, \"data-index1\": d.index1, onClick: _this.changeArea })\n                              )\n                            )\n                          );\n                        } else {\n                          return React.createElement(\n                            \"div\",\n                            { style: mainStyle.list },\n                            React.createElement(\n                              \"div\",\n                              { className: \"list-top\", style: mainStyle.listTop },\n                              d.title.replace(/\\*/g, \"\") + ': '\n                            ),\n                            d.id !== undefined && (d.id === \"VADID_Ridernum\" || d.id === \"approvalmoney\") || d.name !== undefined && (d.name === \"Visitingnumber\" || d.name === \"Wemeetingnumber\") ? React.createElement(\n                              \"div\",\n                              { className: /error/.test(d.className) ? \"list-bottom errorSP\" : \"list-bottom\", style: mainStyle.listBottom },\n                              React.createElement(AInput, { placeholder: \"\\u8BF7\\u586B\\u5199\\u4FE1\\u606F\", style: mainStyle.input, value: d.val, \"data-index\": d.index, \"data-index1\": d.index1, onBlur: _this.checkInput })\n                            ) : React.createElement(\n                              \"div\",\n                              { className: /error/.test(d.className) ? \"list-bottom errorSP\" : \"list-bottom\", style: mainStyle.listBottom },\n                              React.createElement(AInput, { placeholder: \"\\u8BF7\\u586B\\u5199\\u4FE1\\u606F\", style: mainStyle.input, value: d.val, \"data-index\": d.index, \"data-index1\": d.index1, onBlur: _this.changeInput })\n                            )\n                          );\n                        }\n                      }\n                    }\n                  } else if (d.tag === \"TEXTAREA\") {\n                    if (d.disabled === true || d.readOnly === true) {\n                      return React.createElement(\n                        \"div\",\n                        { style: mainStyle.list },\n                        React.createElement(\n                          \"span\",\n                          { className: \"list-title\", style: mainStyle.listLeft },\n                          d.title + ': '\n                        ),\n                        React.createElement(\n                          \"span\",\n                          { className: \"list-content\", style: mainStyle.listRight },\n                          d.val\n                        )\n                      );\n                    } else {\n                      return React.createElement(\n                        \"div\",\n                        { style: mainStyle.list },\n                        React.createElement(\n                          \"div\",\n                          { className: \"list-top\", style: mainStyle.listTop },\n                          d.title.replace(/\\*/g, \"\") + ': '\n                        ),\n                        React.createElement(\n                          \"div\",\n                          { className: /error/.test(d.className) ? \"list-bottom errorSP\" : \"list-bottom\", style: mainStyle.listBottom },\n                          React.createElement(ATextarea, { style: mainStyle.textarea, placeholder: \"\\u8BF7\\u586B\\u5199\\u4FE1\\u606F\", value: d.val, \"data-index\": d.index, \"data-index1\": d.index1, onBlur: _this.changeTextarea })\n                        )\n                      );\n                    }\n                  } else if (d.tag === \"SELECT\") {\n                    if (d.disabled === true) {\n                      return React.createElement(\n                        \"div\",\n                        { style: mainStyle.list },\n                        React.createElement(\n                          \"span\",\n                          { className: \"list-title\", style: mainStyle.listLeft },\n                          d.title + ': '\n                        ),\n                        React.createElement(\n                          \"span\",\n                          { className: \"list-content\", style: mainStyle.listRight },\n                          d.val\n                        )\n                      );\n                    } else {\n                      return React.createElement(\n                        \"div\",\n                        { style: mainStyle.list },\n                        React.createElement(\n                          \"div\",\n                          { className: \"list-top\", style: mainStyle.listTop },\n                          React.createElement(\"span\", { style: mainStyle.redColor }),\n                          d.title.replace(/\\*/g, \"\") + ': '\n                        ),\n                        React.createElement(\n                          \"div\",\n                          { className: /error/.test(d.className) ? \"list-bottom errorSP\" : \"list-bottom\", style: mainStyle.listBottom },\n                          React.createElement(\n                            \"select\",\n                            { style: mainStyle.select, value: d.val, \"data-index\": d.index, \"data-index1\": d.index1, onChange: _this.changeSelect },\n                            d.options.map(function (d1, idx1) {\n                              return React.createElement(\n                                \"option\",\n                                { \"data-index\": d1.dataIndex, value: d1.val },\n                                d1.text\n                              );\n                            })\n                          )\n                        )\n                      );\n                    }\n                  } else {\n                    return React.createElement(\n                      \"div\",\n                      { style: mainStyle.list },\n                      React.createElement(\n                        \"span\",\n                        { className: \"list-title\", style: mainStyle.listLeft },\n                        d.title + ': '\n                      ),\n                      React.createElement(\n                        \"span\",\n                        { className: \"list-content\", style: mainStyle.listRight },\n                        d.val\n                      )\n                    );\n                  }\n                }\n              }\n            }\n          }) : React.createElement(\"div\", { style: { display: \"none\" } })\n        )\n      );\n    }\n  }\n});\nmodule.exports = mainCard;";
>>>>>>> 0b643e08339b8bb92eae05b8f7dfba1337db61ca
    }
  });
})(window, ysp);