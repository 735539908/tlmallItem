(function (win, ysp) {

  var utils = ysp.utils;
  ysp.customTemplateHelper = {};
  utils.extend(ysp.customTemplateHelper, {
    Loading: function () {
      var selfTemplate = "import React from 'react';\n\nconst styles = {\n  loaderWrap: {\n    position: 'fixed',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(255, 255, 255, 0.35)',\n    zIndex: '100000'\n  },\n  loader: {\n    position: 'absolute',\n    width: '70px',\n    height: '70px',\n    left: '50%',\n    '-webkit-transform': 'translate3d(-50%, 0, 0)',\n    transform: 'translate3d(-50%, 0, 0)',\n    top: 'calc(50% - 35px)',\n    backgroundColor: 'rgba(174, 186, 202, 0.86)',\n    boxShadow: '0 1px 2px rgba(0, 0, 0, 0.3)',\n    borderRadius: '50%',\n    zIndex: 1\n  },\n  spinner: {\n    width: '60px',\n    height: '60px',\n    margin: '5px 5px',\n    backgroundColor: '#428EF1',\n    borderRadius: '100%',\n    '-webkit-animation': 'pulseKeyframes 1.0s infinite ease-in-out',\n    animation: 'pulseKeyframes 1.0s infinite ease-in-out'\n  },\n  mask: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 2\n  }\n};\n\nclass Loading extends React.Component {\n\n  handleTouchMove = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  renderContent = () => {\n    const isLoading = this.props.isLoading;\n\n    const child = [];\n\n    if (!this.props.showModal) {\n      return child;\n    }\n\n    child.push(\n      <div key=\"loading\" style={styles.loaderWrap}>\n        <style>\n          {\n            `\n            @-webkit-keyframes pulseKeyframes {\n              0% {\n                -webkit-transform: scale(0);\n                transform: scale(0);\n              }\n              100% {\n                -webkit-transform: scale(1.0);\n                transform: scale(1.0);\n                opacity: 0;\n              }\n            }\n\n            @keyframes pulseKeyframes {\n              0% {\n                -webkit-transform: scale(0);\n                transform: scale(0);\n              }\n              100% {\n                -webkit-transform: scale(1.0);\n                transform: scale(1.0);\n                opacity: 0;\n              }\n            }\n          `\n        }\n        </style>\n        <div style={styles.loader}>\n          <div style={styles.spinner}></div>\n        </div>\n        <div style={styles.mask} onTouchMove={this.handleTouchMove}></div>\n      </div>\n    );\n\n    return child;\n  };\n\n  render() {\n    return (\n      <div>\n        {this.renderContent()}\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n";
      return "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar styles = {\n  loaderWrap: {\n    position: 'fixed',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(255, 255, 255, 0.35)',\n    zIndex: '100000'\n  },\n  loader: {\n    position: 'absolute',\n    width: '70px',\n    height: '70px',\n    left: '50%',\n    '-webkit-transform': 'translate3d(-50%, 0, 0)',\n    transform: 'translate3d(-50%, 0, 0)',\n    top: 'calc(50% - 35px)',\n    backgroundColor: 'rgba(174, 186, 202, 0.86)',\n    boxShadow: '0 1px 2px rgba(0, 0, 0, 0.3)',\n    borderRadius: '50%',\n    zIndex: 1\n  },\n  spinner: {\n    width: '60px',\n    height: '60px',\n    margin: '5px 5px',\n    backgroundColor: '#428EF1',\n    borderRadius: '100%',\n    '-webkit-animation': 'pulseKeyframes 1.0s infinite ease-in-out',\n    animation: 'pulseKeyframes 1.0s infinite ease-in-out'\n  },\n  mask: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 2\n  }\n};\n\nvar Loading = function (_React$Component) {\n  _inherits(Loading, _React$Component);\n\n  function Loading() {\n    var _Object$getPrototypeO;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Loading);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(Loading)).call.apply(_Object$getPrototypeO, [this].concat(args))), _this), _this.handleTouchMove = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n    }, _this.renderContent = function () {\n      var isLoading = _this.props.isLoading;\n\n      var child = [];\n\n      if (!_this.props.showModal) {\n        return child;\n      }\n\n      child.push(_react2.default.createElement(\n        'div',\n        { key: 'loading', style: styles.loaderWrap },\n        _react2.default.createElement(\n          'style',\n          null,\n          '\\n            @-webkit-keyframes pulseKeyframes {\\n              0% {\\n                -webkit-transform: scale(0);\\n                transform: scale(0);\\n              }\\n              100% {\\n                -webkit-transform: scale(1.0);\\n                transform: scale(1.0);\\n                opacity: 0;\\n              }\\n            }\\n\\n            @keyframes pulseKeyframes {\\n              0% {\\n                -webkit-transform: scale(0);\\n                transform: scale(0);\\n              }\\n              100% {\\n                -webkit-transform: scale(1.0);\\n                transform: scale(1.0);\\n                opacity: 0;\\n              }\\n            }\\n          '\n        ),\n        _react2.default.createElement(\n          'div',\n          { style: styles.loader },\n          _react2.default.createElement('div', { style: styles.spinner })\n        ),\n        _react2.default.createElement('div', { style: styles.mask, onTouchMove: _this.handleTouchMove })\n      ));\n\n      return child;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Loading, [{\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        'div',\n        null,\n        this.renderContent()\n      );\n    }\n  }]);\n\n  return Loading;\n}(_react2.default.Component);\n\nexports.default = Loading;";
    },
    GetFormTemplate: function () {
      var selfTemplate = "export default class extends React.Component{\n  \n  onClick = (e) => {\n    const target = e.target;\n    const id = target.getAttribute('data-id');\n    const handler = this.props.customHandler;\n    if (target.tagName = 'A') {\n      const index = target.getAttribute('data-index');\n      if (id && handler) {\n        handler({\n          data: {\n            id: id,\n            index: index\n          },\n          eventType: 'linkClick'\n        });\n      }\n    }\n    if (id && handler) {\n      handler({\n        data: {\n          id: id\n        },\n        eventType: 'click'\n      });\n    }\n  }\n  \n  onChange = (e) => {\n    const id = e.target.getAttribute('data-id');\n    const value = e.target.value;\n    const handler = this.props.customHandler;\n    if (id && handler) {\n      handler({\n        data: {\n          id: id,\n          value: value\n        },\n        eventType: 'change'\n      });\n    }\n  }\n  \n\trender() {\n    const data = this.props.data.customData;\n    let blocks = [],\n        items = [],\n        title = '\u57FA\u672C\u4FE1\u606F';\n    data.forEach((d, idx) => {\n      switch (d.type) {\n        case 'input':\n          {\n            items.push(<li key={'li-' + idx}>\n                        <span className='span-left span-key'>{d.key}</span>\n                        <span className='span-right'><input data-id={d.id} onChange={this.onChange} value={d.value}/></span>\n                        </li>);\n            break;\n          }\n        case 'date':\n          {\n            items.push(<li key={'li-' + idx}>\n                        <span className='span-left span-key'>{d.key}</span>\n                        <span className='span-right'><input data-id={d.id} type='date' onChange={this.onChange} value={d.value}/></span>\n                        </li>);\n            break;\n          }\n        case 'select':\n          {\n          \titems.push(\n              <li key={'li-' + idx}>\n                <span className='span-left span-key'>{d.key}</span>\n                <span className='span-right'>\n                  <select data-id={d.id} onChange={this.onChange} value={d.value}>\n                    {d.options.map((item, opIndex) => <option key={opIndex} value={item.value}>{item.text}</option>)}\n                  </select>\n                </span>\n              </li>\n            );\n            break;\n          }\n        case 'a':\n          {\n            var links = d.texts.map(function(text, linkIndex) {\n              return (<a href='#' data-index={linkIndex} data-id={d.id}>{text}</a>);\n            })\n            items.push(<li key={'li-' + idx} onClick={this.onClick}>\n                        <span className='span-key'>{d.key}</span>\n                        <span className='span-value custom-many-a'>{links}</span>\n                        </li>);\n            break;\n          }\n        case 'button':\n          {\n            items.push(<li key={'li-' + idx}>\n                        <span className='span-key'>{d.key}</span>\n                        <button data-id={d.id} onClick={this.onClick}>{d.text}</button>\n                        </li>);\n            break;\n          }\n        case 'text':\n          {\n            if (!d.value && !d.key) {\n              break;\n            }\n            if ((!d.value || d.value.length <= 30) && (d.key.length + d.key.replace(/\\d/g, '').length) <= 16) {\n              items.push(<li key={'li-' + idx}>\n                        <span className='span-left span-key'>{d.key}</span>\n                        <span className='span-right span-value'>{d.value || ' '}</span>\n                        </li>);\n            } else {\n              items.push(<li key={'li-' + idx}>\n                        <span className='span-line span-key'>{d.key}</span>\n                        <span className='span-line span-value'>{d.value || ' '}</span>\n                        </li>);\n            }\n            break;\n          }\n        case 'title':\n          {\n            blocks.push(\n              <div className='div-container' key={'blocks-' + blocks.length}>\n                <span className='span-title'>{title}</span>\n                <ul>\n                  {items}\n                </ul>\n              </div>\n            );\n            items = [];\n            title = d.value;\n            break;\n          }\n        case 'subTitle':\n          {\n            items.push(<li key={'li-' + idx}><span className='span-sub-title'>{d.value}</span></li>);\n          }\n      }\n    });\n    blocks.push(<div className='div-container' key={'blocks-' + blocks.length}>\n                      <span className='span-title'>{title}</span>\n                      <ul>\n                        {items}\n                      </ul>\n                  </div>);\n    return (\n      <div className='outer-container'>\n        {blocks}\n      </div>\n    );\n  }\n}";
      return "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _class = function (_React$Component) {\n  _inherits(_class, _React$Component);\n\n  function _class() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, _class);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = _class.__proto__ || Object.getPrototypeOf(_class)).call.apply(_ref, [this].concat(args))), _this), _this.onClick = function (e) {\n      var target = e.target;\n      var id = target.getAttribute('data-id');\n      var handler = _this.props.customHandler;\n      if (target.tagName = 'A') {\n        var index = target.getAttribute('data-index');\n        if (id && handler) {\n          handler({\n            data: {\n              id: id,\n              index: index\n            },\n            eventType: 'linkClick'\n          });\n        }\n      }\n      if (id && handler) {\n        handler({\n          data: {\n            id: id\n          },\n          eventType: 'click'\n        });\n      }\n    }, _this.onChange = function (e) {\n      var id = e.target.getAttribute('data-id');\n      var value = e.target.value;\n      var handler = _this.props.customHandler;\n      if (id && handler) {\n        handler({\n          data: {\n            id: id,\n            value: value\n          },\n          eventType: 'change'\n        });\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(_class, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var data = this.props.data.customData;\n      var blocks = [],\n          items = [],\n          title = '\u57FA\u672C\u4FE1\u606F';\n      data.forEach(function (d, idx) {\n        switch (d.type) {\n          case 'input':\n            {\n              items.push(React.createElement(\n                'li',\n                { key: 'li-' + idx },\n                React.createElement(\n                  'span',\n                  { className: 'span-left span-key' },\n                  d.key\n                ),\n                React.createElement(\n                  'span',\n                  { className: 'span-right' },\n                  React.createElement('input', { 'data-id': d.id, onChange: _this2.onChange, value: d.value })\n                )\n              ));\n              break;\n            }\n          case 'date':\n            {\n              items.push(React.createElement(\n                'li',\n                { key: 'li-' + idx },\n                React.createElement(\n                  'span',\n                  { className: 'span-left span-key' },\n                  d.key\n                ),\n                React.createElement(\n                  'span',\n                  { className: 'span-right' },\n                  React.createElement('input', { 'data-id': d.id, type: 'date', onChange: _this2.onChange, value: d.value })\n                )\n              ));\n              break;\n            }\n          case 'select':\n            {\n              items.push(React.createElement(\n                'li',\n                { key: 'li-' + idx },\n                React.createElement(\n                  'span',\n                  { className: 'span-left span-key' },\n                  d.key\n                ),\n                React.createElement(\n                  'span',\n                  { className: 'span-right' },\n                  React.createElement(\n                    'select',\n                    { 'data-id': d.id, onChange: _this2.onChange, value: d.value },\n                    d.options.map(function (item, opIndex) {\n                      return React.createElement(\n                        'option',\n                        { key: opIndex, value: item.value },\n                        item.text\n                      );\n                    })\n                  )\n                )\n              ));\n              break;\n            }\n          case 'a':\n            {\n              var links = d.texts.map(function (text, linkIndex) {\n                return React.createElement(\n                  'a',\n                  { href: '#', 'data-index': linkIndex, 'data-id': d.id },\n                  text\n                );\n              });\n              items.push(React.createElement(\n                'li',\n                { key: 'li-' + idx, onClick: _this2.onClick },\n                React.createElement(\n                  'span',\n                  { className: 'span-key' },\n                  d.key\n                ),\n                React.createElement(\n                  'span',\n                  { className: 'span-value custom-many-a' },\n                  links\n                )\n              ));\n              break;\n            }\n          case 'button':\n            {\n              items.push(React.createElement(\n                'li',\n                { key: 'li-' + idx },\n                React.createElement(\n                  'span',\n                  { className: 'span-key' },\n                  d.key\n                ),\n                React.createElement(\n                  'button',\n                  { 'data-id': d.id, onClick: _this2.onClick },\n                  d.text\n                )\n              ));\n              break;\n            }\n          case 'text':\n            {\n              if (!d.value && !d.key) {\n                break;\n              }\n              if ((!d.value || d.value.length <= 30) && d.key.length + d.key.replace(/\\d/g, '').length <= 16) {\n                items.push(React.createElement(\n                  'li',\n                  { key: 'li-' + idx },\n                  React.createElement(\n                    'span',\n                    { className: 'span-left span-key' },\n                    d.key\n                  ),\n                  React.createElement(\n                    'span',\n                    { className: 'span-right span-value' },\n                    d.value || ' '\n                  )\n                ));\n              } else {\n                items.push(React.createElement(\n                  'li',\n                  { key: 'li-' + idx },\n                  React.createElement(\n                    'span',\n                    { className: 'span-line span-key' },\n                    d.key\n                  ),\n                  React.createElement(\n                    'span',\n                    { className: 'span-line span-value' },\n                    d.value || ' '\n                  )\n                ));\n              }\n              break;\n            }\n          case 'title':\n            {\n              blocks.push(React.createElement(\n                'div',\n                { className: 'div-container', key: 'blocks-' + blocks.length },\n                React.createElement(\n                  'span',\n                  { className: 'span-title' },\n                  title\n                ),\n                React.createElement(\n                  'ul',\n                  null,\n                  items\n                )\n              ));\n              items = [];\n              title = d.value;\n              break;\n            }\n          case 'subTitle':\n            {\n              items.push(React.createElement(\n                'li',\n                { key: 'li-' + idx },\n                React.createElement(\n                  'span',\n                  { className: 'span-sub-title' },\n                  d.value\n                )\n              ));\n            }\n        }\n      });\n      blocks.push(React.createElement(\n        'div',\n        { className: 'div-container', key: 'blocks-' + blocks.length },\n        React.createElement(\n          'span',\n          { className: 'span-title' },\n          title\n        ),\n        React.createElement(\n          'ul',\n          null,\n          items\n        )\n      ));\n      return React.createElement(\n        'div',\n        { className: 'outer-container' },\n        blocks\n      );\n    }\n  }]);\n\n  return _class;\n}(React.Component);\n\nexports.default = _class;";
    }
  });
})(window, ysp);