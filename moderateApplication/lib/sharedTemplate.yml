- name: 环节信息
  getTemplate: "module.exports = React.createClass({\n  render: function() {\n    var data = this.props.customData;\n    var lis = data.content.map(function(ele,index){\n      if(index > 0){\n        return(\n      \t<div>{ele}\n        </div>\n      )\n      }\n    })\n    return (\n      <div className='Auditor'>\n        <div className='contenttitle'><span></span><p>{data.title}</p></div>\n        <div className='content'><div className='contentitem'>{data.content[0].left}</div><div className='contentitem'>{lis}</div></div>\n      </div>\n    )\n  }\n});"
  getData: >
    if (!elem) {
      return;
    }

    var data = {};

    data.title = '环节信息';

    data.content = [];

    data.content.push({
      left: elem.querySelector('tr').querySelector('td').textContent.trim()
    });

    var trs =
    elem.querySelector('tr').querySelectorAll('td')[1].querySelectorAll('tr');

    for (var i = 0; i < trs.length; i++) {
      data.content.push(trs[i].textContent.trim());
    }

    return data;
  doAction: ''
- name: 请假明细
  getTemplate: "module.exports = React.createClass({\n  render: function() {\n    var data = this.props.customData;\n    var ths = data.titles.map(function(d,i){\n      return(\n      \t<th>{d}</th>\n      )\n    })\n    var trs = data.content.map(function(d,i){\n      var lis = d.map(function(ele,index){\n        return(\n        \t<td>{ele}</td>\n        )\n      })\n      return(\n      \t<tr>{lis}</tr>\n      )\n    })\n    return (\n      <div className='askleave'>\n        <div className='contenttitle'><span></span><p>{data.title}</p></div>\n        <div className='contentitem'>\n        \t<table>\n            <thead><tr>{ths}</tr></thead>\n            <tbody>{trs}</tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n});"
  getData: >
    if (!elem) {
      return;
    }

    var data = ysp.customHelper.getTableData(elem, ['开始日期', '开始时间', '结束日期',
    '结束时间', '请假时长', '实际请假时长']);

    data.title = '请假明细';

    return data;
  doAction: ''
- name: 底部按钮
  getTemplate: "module.exports = React.createClass({\n  onClick:function(e){\n    var handler = this.props.customHandler,\n        target = e.target,\n        type = '',\n        data;\n    if(target.tagName.toLowerCase() == 'div'){\n      target.parentElement.nextElementSibling.style.display = 'block';\n      // target.parentElement.nextElementSibling.style.height = target.ownerDocument.style.height;\n      var lis = target.parentElement.parentElement.querySelector('.dianbl').querySelectorAll('li');\n      for(var i=0;i<lis.length;i++){\n        lis[i].style.bottom = i*50 +'px';\n      }\n    }\n    if(target.tagName.toLowerCase() == 'p'){\n      target.parentElement.parentElement.parentElement.style.display = 'none';\n    }\n    if(target.tagName.toLowerCase() == 'button'){\n      type = 'click';\n      data = target.getAttribute('data-id');\n    }\n    if(handler){\n      handler({\n        eventType:type,\n        data:data\n      })\n    }\n  },\n  render: function() {\n    var data = this.props.customData;\n    var _this = this;\n  \tvar lis = data.map(function(d,i){\n      if(i<2){\n        return(\n        \t<button data-id={i} onClick={_this.onClick}>{d}</button>\n        )\n      }\n    })\n    var list = data.map(function(d,i){\n      if(i>1){\n        return(\n        \t<li><button data-id={i} onClick={_this.onClick}>{d}</button></li>\n        )\n      }\n    })\n    return (\n      <div className='submit'>\n        <div className='subtrue'><div>{lis}</div><div onClick={_this.onClick.bind(_this)}></div></div>\n        <div className='dianbl'><ul><li><p onClick={_this.onClick}>取消</p></li>{list}</ul></div>\n      </div>\n    )\n  }\n});"
  getData: |
    if (!elem) {
      return;
    }
    var data = [];
    var lis = elem.querySelectorAll('li');
    for (var i = 0; i < lis.length; i++) {
      data.push(lis[i].textContent.trim());
    }
    return data;
  doAction: |
    var type = data.eventType;
    var data = data.customData;
    if (type == 'click') {
      elem.querySelectorAll('li')[data].querySelector('a').click();
    }
- name: 审批日志
  getTemplate: "module.exports = React.createClass({\n  render: function() {\n    var data = this.props.customData;\n    var ths = data.titles.map(function(d,i){\n      return(\n      \t<th>{d}</th>\n      )\n    })\n    var trs = data.content.map(function(d,i){\n      var lis = d.map(function(ele,index){\n        return(\n        \t<td>{ele}</td>\n        )\n      })\n      return(\n      \t<tr>{lis}</tr>\n      )\n    })\n    return (\n      <div className='examination'>\n        <div className='contenttitle'><span></span><p>{data.title}</p></div>\n        <div className='contentitem'>\n        \t<table>\n            <thead><tr>{ths}</tr></thead>\n            <tbody>{trs}</tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n});"
  getData: >
    if (!elem) {
      return;
    }

    var data = ysp.customHelper.getTableData(elem, ['环节名称', '人员姓名', '人员公司',
    '人员部门', '人员职位', '审批操作', '审批时间', '意见']);

    data.title = '审批日志';

    return data;
  doAction: ''
- name: 关联流程item
  getTemplate: "module.exports = React.createClass({\n  render: function() {\n    var data = this.props.customData;\n    var lis = data.content.map(function(ele,index){\n      var list = ele.map(function(d,i){\n        if(i==0){\n          return(\n          \t<div className='titlediv'>\n            \t<div>{'0'+(i+1)}</div>\n              <div>{d}</div>\n            </div>\n          )\n        }\n        return(\n        \t<div>\n          \t<div className='contentitem'>{data.titles[i]}</div>\n            <div className='contentitem'>{d}</div>\n          </div>\n        )\n      })\n      return(\n      \t<div className='contentit'>{list}</div>\n      )\n    })\n    return (\n      <div className='relation'>\n        <div className='contenttitle'><span></span><p>{data.title}</p></div>\n        <div className='content'>\n    \t\t\t{lis}    \t\n        </div>\n      </div>\n    )\n  }\n});"
  getData: >
    if (!elem) {
      return;
    }

    var data = {};

    data.title = '关联流程';

    data.titles = [];

    data.content = [];

    var ths =
    elem.querySelector('thead').querySelector('tr').querySelectorAll('th');

    for (var i = 0; i < ths.length; i++) {
      if (i < ths.length - 1) {
        data.titles.push(ths[i].textContent.trim());
      }
    }

    var trs = elem.querySelector('tbody').querySelectorAll('tr');

    for (var i = 0; i < trs.length; i++) {
      var arr = [];
      var tds = trs[i].querySelectorAll('td');

      for (var k = 0; k < data.titles.length; k++) {
        arr.push(tds[k].textContent.trim());
      }

      data.content.push(arr);
    }

    return data;
  doAction: ''
- name: 审批操作
  getTemplate: "module.exports = React.createClass({\n  onChange:function(e){\n    var handler = this.props.customHandler,\n        target = e.target;\n    if(handler){\n      handler({\n        eventType:'change',\n        data:target.value\n      })\n    }\n  },\n  render: function() {\n    var data = this.props.customData,\n        _this = this;\n    return (\n      <div className='approval'>\n        <div className='contenttitle'><span></span><p>{data.title}</p></div>\n        <div className='content'>\n          \t<div className='contentitem'>{data.content[0].left}</div>\n          \t<div className='contentitem'>{data.content[0].right}</div>\n          </div>\n          <div className='content'>\n          \t<div className='contentitem'>{data.content[1].left}</div>\n            <textarea value={data.content[1].right} onChange={_this.onChange}></textarea>\n        \t</div>\n        <div className='tishi'>{data.content[2].left}</div>\n      </div>\n    )\n  }\n});"
  getData: >
    if (!elem) {
      return;
    }

    var data = {};

    data.title = '审批操作';

    data.content = [];

    var trs = elem.querySelectorAll('tr');

    var obj = {};

    obj.left = '当前环节';

    obj.right = trs[0].querySelectorAll('td')[1].textContent.trim();

    data.content.push(obj);

    var obj = {};

    obj.left = '意见';

    obj.right =
    trs[1].querySelectorAll('td')[1].querySelector('textarea').value;

    data.content.push(obj);

    data.content.push({
      left: trs[1].querySelectorAll('td')[1].textContent.trim()
    });

    return data;
  doAction: ''
- name: 申请明细合计
  getTemplate: "module.exports = React.createClass({\n  render: function() {\n    var data = this.props.customData;\n    var ths = data.titles.map(function(d,i){\n      return(\n      \t<th>{d}</th>\n      )\n    })\n    var trs = data.content.map(function(d,i){\n      if(i!=data.content.length-1){\n        var tds = d.map(function(ele,index){\n        return(\n        \t<td>{ele}</td>\n        )\n      \t})\n      }\n      return(\n      \t<tr>{tds}</tr>\n      )\n    })\n    var lislength = data.contentlength.map(function(d,i){\n      return(\n      \t<div className='content'>\n        \t<div className='contentitembom'>{d.left}</div>\n          <div className='contentitembom'>{d.right}</div>\n        </div>\n      )\n    })\n    return (\n      <div className='askleave'>\n        <div className='contenttitle'><span></span><p>{data.title}</p></div>\n        <div className='contentitem'>\n        \t<table>\n            <thead><tr>{ths}</tr></thead>\n            <tbody>{trs}</tbody>\n          </table>\n        </div>\n        <div className='tablebottom'>{lislength}</div>\n      </div>\n    )\n  }\n});"
  getData: |
    if (!elem) {
      return;
    }
    var data = {};
    data.titles = [];
    data.content = [];
    data.contentlength = [];
    var trs = elem.querySelectorAll('tr');
    data.title = trs[0].textContent.trim();
    var ths = elem.querySelectorAll('th');
    for (var i = 0; i < ths.length; i++) {
      data.titles.push(ths[i].textContent.trim());
    }
    for (var i = 2; i < trs.length; i++) {
      var arr = [];

      if (i != trs.length - 1) {
        var tds = trs[i].querySelectorAll('td');

        for (var k = 0; k < tds.length; k++) {
          arr.push(tds[k].textContent.trim());
        }
      }

      if (i == trs.length - 1) {
        data.contentlength.push({
          left: trs[i].querySelector('td').textContent.trim(),
          right: trs[i].querySelector('td').querySelector('input').value
        });
      }

      data.content.push(arr);
    }
    return data;
  doAction: ''
- name: 知会信息
  getTemplate: "module.exports = React.createClass({\n  render: function() {\n    var data = this.props.customData;\n    var lis = data.content.map(function(ele,index){\n      var list = ele.map(function(d,i){\n        return(\n        \t<div>\n          \t<div className='contentitem'>{d.left}</div>\n            <div className='contentitem'>{d.right}</div>\n          </div>\n        )\n      })\n      return(\n      \t<div className='contentit'>{list}</div>\n      )\n    })\n    return (\n      <div className='understanding'>\n        <div className='contenttitle'><span></span><p>{data.title}</p></div>\n        <div className='content'>\n    \t\t\t{lis}    \t\n        </div>\n      </div>\n    )\n  }\n});"
  getData: |
    if (!elem) {
      return;
    }
    var data = {};
    var trs = elem.querySelectorAll('tr');
    data.title = '知会信息';
    data.content = [];
    for (var i = 0; i < trs.length; i++) {
      var arr = [];
      var tds = trs[i].querySelectorAll('td');

      for (var k = 0; k < tds.length; k++) {
        if (tds[k].querySelector('input')) {
          arr.push({
            left: tds[k].querySelector('label').textContent.trim(),
            right: tds[k].querySelector('input').value
          });
        }
      }

      data.content.push(arr);
    }
    return data;
  doAction: ''
- name: 小记明细
  getTemplate: "module.exports = React.createClass({\n  render: function() {\n    var data = this.props.customData;\n    var ths = data.titles.map(function(d,i){\n      return(\n      \t<th>{d}</th>\n      )\n    })\n    var trs = data.content.map(function(d,i){\n        var tds = d.map(function(ele,index){\n          return(\n            <td>{ele}</td>\n          )\n      \t})\n      return(\n      \t<tr>{tds}</tr>\n      )\n    })\n    var lislength = data.contentlength.map(function(d,i){\n      return(\n      \t<div className='content'>\n        \t<div className='contentitembom'>{d.left}</div>\n          <div className='contentitembom'>{d.right}</div>\n        </div>\n      )\n    })\n    return (\n      <div className='askleave'>\n        <div className='contenttitle'><span></span><p>{data.title}</p></div>\n        <div className='contentitem'>\n        \t<table>\n            <thead><tr>{ths}</tr></thead>\n            <tbody>{trs}</tbody>\n          </table>\n        </div>\n        <div className='tablebottom'>{lislength}</div>\n      </div>\n    )\n  }\n});"
  getData: |
    if (!elem) {
      return;
    }
    var data = {};
    data.title = '处理明细';
    data.titles = [];
    data.content = [];
    data.contentlength = [];
    var ths = elem.querySelectorAll('th');
    for (var i = 1; i < ths.length; i++) {
      data.titles.push(ths[i].textContent.trim());
    }
    var trs = elem.querySelectorAll('tr');
    for (var i = 2; i < trs.length; i++) {
      var arr = [];

      if (i != trs.length - 1) {
        var tds = trs[i].querySelectorAll('td');

        for (var k = 0; k < tds.length; k++) {
          arr.push(tds[k].textContent.trim());
        }

        data.content.push(arr);
      }

      if (i == trs.length - 1) {
        var sps = trs[i].querySelectorAll('span');
        var ipts = trs[i].querySelectorAll('input');

        for (var k = 0; k < sps.length; k++) {
          data.contentlength.push({
            left: sps[k].textContent.split(':')[0].trim().split('（人民币）')[0],
            right: ipts[k].value
          });
        }
      }
    }
    return data;
  doAction: ''
- name: 附件
  getTemplate: "module.exports = React.createClass({\n  onClick:function(e){\n    var handler = this.props.customHandler,\n        target = e.target,\n        type = '',\n        data = '';\n    if(target.tagName.toLowerCase() == 'i'){\n      type = 'popdata';\n      data = target.id;\n    }\n    if(target.tagName.toLowerCase() == 'p'){\n      type = 'updel';\n      data = {\n        index:target.getAttribute('data-index'),\n        i:target.className=='xiazai'?0:1\n      }\n    }\n    if(handler){\n      handler({\n        eventType:type,\n        data:data\n      })\n    }\n  },\n  click:function(e){\n    var target = e.target;\n    if(target.className == 'shang'){\n      target.className = 'xia';\n      var divs = target.parentElement.parentElement.parentElement.querySelectorAll('div.displnone');\n      for(var i=0;i<divs.length;i++){\n        divs[i].className = 'displblock';\n      }\n    }else{\n      target.className = 'shang';\n      var divs = target.parentElement.parentElement.parentElement.querySelectorAll('div.displblock');\n      for(var i=0;i<divs.length;i++){\n        divs[i].className = 'displnone';\n      }\n    }\n  },\n  render: function() {\n    var data = this.props.customData,\n        _this = this;\n    var lis = data.content.map(function(ele,index){\n     console.log(index);\n      var list = ele.map(function(d,i){\n        if(i==0){\n          return(\n          \t<div className='titlediv'>\n            \t<div>{'0'+(i+1)}</div>\n              <div style={{'position':'relative'}}>{d}<span onClick={_this.click} className='shang'></span></div>\n            </div>\n          )\n        }\n        if(i == ele.length-1){\n          if(d.length>2){\n              return(\n              <div className='displnone'>\n                <div className='contentitem contentspan' style={{'width':'100%','text-align-last':'auto','text-align':'center'}}><p className='shanchu' data-index={index} onClick={_this.onClick.bind(_this)}><span></span>{d[2]+d[3]}</p><p data-index={index} className='xiazai' onClick={_this.onClick.bind(_this)}><span></span>{d.length>2?d[0]+d[1]:''}</p></div>\n              </div>\n            )\n          }else{\n             return(\n              <div className='displnone'>\n                <div className='contentitem'><p className='xiazai' data-index={index} onClick={_this.onClick.bind(_this)}><span></span>{d[0]+d[1]}</p></div>\n              </div>\n            )\n          }\n        }\n        return(\n        \t<div className='displnone'>\n          \t<div className='contentitem'>{data.titles[i]}</div>\n            <div className='contentitem'>{d}</div>\n          </div>\n        )\n      })\n      return(\n      \t<div className='contentit'>{list}</div>\n      )\n    })\n    \n    return (\n      <div className='Enclosure'>\n        <div className='contenttitle'><span className='xia'></span><p>{data.title}<i id={data.id} onClick={_this.onClick.bind(_this)}></i></p></div>\n        <div className='content'>\n    \t\t\t{lis}\n        </div>\n      </div>\n    )\n  }\n});"
  getData: >
    if (!elem) {
      return;
    }

    var data = ysp.customHelper.getTabledata(elem, ['文件名', '上传人', '上传时间', '版本',
    '操作']);

    data.id = elem.nextElementSibling.nextElementSibling.id;

    data.title = '附件';

    return data;
  doAction: |
    var type = data.eventType;
    var data = data.customData;
    if (type == 'popdata') {
      elem.ownerDocument.querySelector("#" + data).querySelector('input').click();

      if (elem.ownerDocument.querySelector("#" + data).querySelector('input').value) {
        elem.ownerDocument.querySelector("#" + data).querySelector('button').click();
      } // debugger;
      // elem.ownerDocument.location.reload();

    }
    if (type == 'updel') {
      var tds = elem.querySelectorAll('tbody')[1].querySelectorAll('tr')[data.index].querySelectorAll('td');
      tds[tds.length - 1].querySelectorAll('a')[data.i].click();
    }
- name: 详情
  getTemplate: "module.exports = React.createClass({\n  render: function() {\n    var data = this.props.customData;\n    var ths = data.titles.map(function(d,i){\n      return(\n      \t<th>{d}</th>\n      )\n    })\n    var trs = data.content.map(function(d,i){\n      var lis = d.map(function(ele,index){\n        return(\n        \t<td>{ele}</td>\n        )\n      })\n      return(\n      \t<tr>{lis}</tr>\n      )\n    })\n    return (\n      <div className='askleave'>\n        <div className='contenttitle'><span></span><p>{data.title}</p></div>\n        <div className='contentitem'>\n        \t<table>\n            <thead><tr>{ths}</tr></thead>\n            <tbody>{trs}</tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n});"
  getData: >
    if (!elem) {
      return;
    }

    var data = ysp.customHelper.gettable(elem, ['合同方', '名称*', '是否关联人士*', '法人*',
    '地址*', '营业执照代码', '联系人*', '联系方式*']);

    data.title = '签约主体信息';

    return data;
  doAction: ''
- name: 基本信息
  getTemplate: "module.exports = React.createClass({\n  click:function(e){\n    var target = e.target;\n    // debugger;\n    if(target.tagName.toLowerCase() == 'i'){\n      target = target.parentElement.parentElement;\n    }\n    if(target.tagName.toLowerCase() == 'a'){\n      target = target.parentElement;\n    }\n    if(target.previousSibling.className == 'content disnone'){\n      target.previousSibling.className = 'content';\n      target.querySelector('a').className = 'xia';\n    }else{\n      target.previousSibling.className = 'content disnone';\n      target.querySelector('a').className = 'shang';\n    }\n  },\n  render: function() {\n    var data = this.props.customData,\n        _this = this;\n    var lis = data.content.map(function(ele,index){\n      if(index<2){\n        var lisele = ele.map(function(d,i){\n          return(\n          \t<div className='contenttit'>\n            \t<div className='contentitem'>{d.left}</div>\n              <div className='contentitem'>{d.right}</div>\n            </div>\n          )\n        })\n        return(\n        \t<div>{lisele}</div>\n        )\n      }\n    })\n    var list = data.content.map(function(ele,index){\n      if(index>1){\n        var lisele = ele.map(function(d,i){\n          if(!d.type){\n            return(\n          \t<div className='contenttit'>\n            \t<div className='contentitem'>{d.left}</div>\n              <div className='contentitem'>{d.right}</div>\n            </div>\n          )\n          }else{\n            if(d.type == 'textarea'){\n              return(\n              \t<div className='contenttit'>\n                \t<div className='contentitem'>{d.left}</div>\n                  <div className='contentitem'><textarea value={d.right}></textarea></div>\n                </div>\n              )\n            }\n          }\n        })\n        return(\n        \t<div>{lisele}</div>\n        )\n      }\n    })\n    return (\n      <div className='information'>\n       \t<div className='contenttitle'><span></span><p>{data.title}</p></div>\n        <div className='content'>\n          {lis}</div>\n        <div className='content disnone'>\n          {list}\n          <div className='contentitem' style={{'border-bottom':'1px solid #e0e0e0','width':'100%','text-align':'right'}}>\n            <a href='javascript:;'>{data.content[2][data.content[2].length-1].text}</a>\n          </div>\n        </div>\n        <span onClick={_this.click}><a className='shang' href='javascript:;'></a>显示更多内容</span>\n      </div>\n    )\n  }\n});"
  getData: >
    if (!elem) {
      return;
    }

    var data = {}; // var table = elem.querySelectorAll('table')[0];

    var trs = elem.querySelectorAll('tr');

    data.title = '员工信息';

    data.content = [];

    for (var i = 0; i < trs.length; i++) {
      var arr = [];
      var tds = trs[i].querySelectorAll('td');

      for (var k = 0; k < tds.length; k++) {
        if (tds[k].querySelector('input')) {
          arr.push({
            left: tds[k].querySelector('label').textContent.trim(),
            right: tds[k].querySelector('input').value
          });
        }

        if (tds[k].querySelector('select')) {
          var opts = tds[k].querySelector('select').querySelectorAll('option');

          for (var j = 0; j < opts.length; j++) {
            if (opts[j].value == tds[k].querySelector('select').value) {
              arr.push({
                left: tds[k].querySelector('label').textContent.trim(),
                right: opts[j].textContent.trim()
              });
            }
          }
        }

        if (tds[k].querySelector('a')) {
          arr.push({
            href: tds[k].querySelector('a').href,
            text: tds[k].textContent.trim(),
            type: 'a'
          });
        }
      }

      data.content.push(arr);
    } // var table = elem.querySelectorAll('table')[2];

    var tr = elem.querySelectorAll('tr')[elem.querySelectorAll('tr').length -
    2];

    var tds = tr.querySelectorAll('td')[0];

    data.content.push([{
      left: tds.querySelector('label').querySelector('span').previousSibling.previousSibling.previousSibling.textContent.trim(),
      right: tds.querySelector('textarea').value,
      type: 'textarea'
    }]);

    return data;
  doAction: ''
- name: 发起人
  getTemplate: "module.exports = React.createClass({\n  click:function(e){\n    var target = e.target;\n    if(target.parentElement.parentElement.nextElementSibling.className == 'content disnone'){\n      target.className = 'zhankai';\n      target.parentElement.parentElement.nextElementSibling.className = 'content';\n    }else{\n      target.className = 'shouqi';\n      target.parentElement.parentElement.nextElementSibling.className = 'content disnone'\n    }\n  },\n  render: function() {\n    var data = this.props.customData,\n        _this = this;\n    var lis = data.content.map(function(ele,index){\n      return(\n      \t<div className='contenttit'>\n        \t<div className='contentitem'>{ele.leftval}</div>\n          <div className='contentitem'>{ele.rightval}</div>\n        </div>\n      )\n    })\n    return (\n      <div className='initiator'>\n        <div className='contenttitle'><span></span><p>{data.title}<i className='shouqi' onClick={_this.click}></i></p></div>\n        <div className='content disnone'>{lis}</div>\n      </div>\n    )\n  }\n});"
  getData: >
    if (!elem) {
      return;
    }

    var data = {};

    data.title = elem.querySelector("div.title").textContent.trim();

    data.content = [];

    var trs =
    elem.querySelector('table').querySelector('tbody').querySelectorAll('tr');

    for (var i = 0; i < trs.length; i++) {
      var tds = trs[i].querySelectorAll('td');

      for (var k = 0; k < tds.length; k++) {
        data.content.push({
          leftval: tds[k].querySelector('label').textContent.trim(),
          rightval: tds[k].querySelector('input').value
        });
      }
    }

    return data;
  doAction: ''
- name: 基本信息item
  getTemplate: "module.exports = React.createClass({\n  click:function(e){\n    var target = e.target;\n    // debugger;\n    if(target.tagName.toLowerCase() == 'i'){\n      target = target.parentElement.parentElement;\n    }\n    if(target.tagName.toLowerCase() == 'a'){\n      target = target.parentElement;\n    }\n    if(target.previousSibling.className == 'content disnone'){\n      target.previousSibling.className = 'content';\n      // target.innerText = '收起更多内容';\n      target.querySelector('a').className = 'xia';\n    }else{\n      target.previousSibling.className = 'content disnone';\n      // target.innerText = '显示更多内容';\n      target.querySelector('a').className = 'shang';\n    }\n  },\n  render: function() {\n    var data = this.props.customData,\n        _this = this;\n    var lis = data.content.map(function(ele,index){\n      if(index<2){\n        var lisele = ele.map(function(d,i){\n          return(\n          \t<div className='contenttit'>\n            \t<div className='contentitem'>{d.left}</div>\n              <div className='contentitem'>{d.right}</div>\n            </div>\n          )\n        })\n        return(\n        \t<div>{lisele}</div>\n        )\n      }\n    })\n    var list = data.content.map(function(ele,index){\n      if(index>1){\n        var lisele = ele.map(function(d,i){\n          if(!d.type){\n            return(\n          \t<div className='contenttit'>\n            \t<div className='contentitem'>{d.left}</div>\n              <div className='contentitem'>{d.right}</div>\n            </div>\n          )\n          }else{\n            if(d.type == 'textarea'){\n              return(\n              \t<div className='contenttit'>\n                \t<div className='contentitem'>{d.left}</div>\n                  <div className='contentitem'><textarea value={d.right}></textarea></div>\n                </div>\n              )\n            }\n          }\n        })\n        return(\n        \t<div>{lisele}</div>\n        )\n      }\n    })\n    return (\n      <div className='information'>\n       \t<div className='contenttitle'><span></span><p>{data.title}</p></div>\n        <div className='content'>\n          {lis}</div>\n        <div className='content disnone'>\n          {list}\n          <div className='contentitem' style={{'border-bottom':'1px solid #e0e0e0','width':'100%','text-align':'right'}}>\n            <a href='javascript:;'>{data.content[2][data.content[2].length-1].text}</a>\n          </div>\n        </div>\n        <span onClick={_this.click}><a className='shang' href='javascript:;'></a>显示更多内容</span>\n      </div>\n    )\n  }\n});"
  getData: |
    if (!elem) {
      return;
    }
    var data = {};
    var table = elem.querySelectorAll('table')[0];
    var trs = table.querySelectorAll('tr');
    data.title = '基本信息';
    data.content = [];
    for (var i = 0; i < trs.length; i++) {
      var arr = [];
      var tds = trs[i].querySelectorAll('td');

      for (var k = 0; k < tds.length; k++) {
        if (tds[k].querySelector('input')) {
          if (tds[k].querySelector('input').type == 'radio') {
            arr.push({
              left: tds[k].querySelector('label').textContent.trim(),
              right: tds[k].querySelector('input').checked ? tds[k].querySelector('input').parentElement.nextSibling.textContent.trim() : tds[k].querySelector('input').parentElement.nextSibling.textContent.trim()
            });
          } else {
            arr.push({
              left: tds[k].querySelector('label').textContent.trim(),
              right: tds[k].querySelector('input').value
            });
          }
        }

        if (tds[k].querySelector('select')) {
          var opts = tds[k].querySelector('select').querySelectorAll('option');

          for (var j = 0; j < opts.length; j++) {
            if (opts[j].value == tds[k].querySelector('select').value) {
              arr.push({
                left: tds[k].querySelector('label').textContent.trim(),
                right: opts[j].textContent.trim()
              });
            }
          }
        }

        if (tds[k].querySelector('a')) {
          arr.push({
            href: tds[k].querySelector('a').href,
            text: tds[k].textContent.trim(),
            type: 'a'
          });
        }
      }

      data.content.push(arr);
    }
    var table = elem.querySelectorAll('table')[2];
    var tr = table.querySelectorAll('tr')[0];
    var tds = tr.querySelectorAll('td')[0];
    data.content.push([{
      left: tds.querySelector('label').querySelector('span').previousSibling.previousSibling.previousSibling.textContent.trim(),
      right: tds.querySelector('textarea').value,
      type: 'textarea'
    }]);
    return data;
  doAction: ''

- name: 发起人信息-ltt
  getTemplate: "import {Component} from \"react\";\nexport default class extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      isShow:false,\n     \n    }\n  }\n  onclick(e){\n    var target=e.target;\n    var handler=this.props.customHandler;    \n    if(false==this.state.isShow){\n       this.setState({\n        isShow:true\n      })\n    }else{\n      this.setState({\n        isShow:false\n      })\n    }\n    \n  }\n  render(){\n    var data=this.props.customData;\n    var _this=this;\n    var list=data.content.map(function(d,i){\n      return (\n      \t<p><span>{d.leftval}</span><span>{d.rightval}</span></p>\n      )\n    })\n    return (\n    \t<div className='ysp-RenewalInfo-tt'>\n      \t\t<div className='ysp-RenewalInfo-title-tt'><span>{data.title}</span><i onClick={_this.onclick.bind(_this)}>dddddddd</i></div>\n        {_this.state.isShow==true?<div className='ysp-RenewalInfo-content-tt'>{list}</div>:\"\"}\n      </div>\n    )\n  }\n}"
  getData: >
    if (!elem) {
      return;
    }

    var data = {};

    data.title = '发起人信息';

    data.content = [];

    var trs =
    elem.querySelector('table').querySelector('tbody').querySelectorAll('tr');

    for (var i = 0; i < trs.length; i++) {
      var tds = trs[i].querySelectorAll('td');

      for (var k = 0; k < tds.length; k++) {
        data.content.push({
          leftval: tds[k].querySelector('label').textContent.trim(),
          rightval: tds[k].querySelector('input').value
        });
      }
    }


    return data;
  doAction: ''
